__declspec(dllimport) public: static bool __cdecl AcRxClass::isDerivedFrom(class AcRxClass const *,class AcRxClass const *) *OpenDCL* ['editor_mfcsamps_asdkFileNav', 'database_elipsjig', 'reactors_dbreact', 'database_clonenod' and 40 others]
public: static class AcRxClass * __cdecl AcEdCommandStack::desc(void) *OpenDCL* ['editor_mfcsamps_asdkFileNav', 'database_elipsjig', 'reactors_dbreact', 'database_clonenod' and 38 others]
__declspec(dllimport) public: static class AcRxResourceInstance const & __cdecl AcRxResourceInstance::empty(void) ['editor_mfcsamps_asdkFileNav', 'database_elipsjig', 'reactors_dbreact', 'database_clonenod' and 37 others]
public: static class AcRxClass * __cdecl AcRxDynamicLinker::desc(void) *OpenDCL* ['editor_mfcsamps_asdkFileNav', 'database_elipsjig', 'database_clonenod', 'database_xdata' and 36 others]
public: enum Acad::ErrorStatus __cdecl AcDbObject::close(void) *OpenDCL* ['database_xtsndict', 'database_ownrshp', 'database_ents', 'database_xdata' and 32 others]
class AcDbHostApplicationServices * __cdecl acdbHostApplicationServices(void) *OpenDCL* ['database_elipsjig', 'database_ownrshp', 'database_ents', 'database_groups' and 26 others]
enum Acad::ErrorStatus __cdecl acdbOpenObject(class AcDbObject * &,class AcDbObjectId,class AcRxClass * (__cdecl*)(void),enum AcDb::OpenMode,bool) *OpenDCL* ['database_xtsndict', 'database_ownrshp', 'database_ents', 'database_groups' and 25 others]
int __cdecl acutPrintf(wchar_t const *,...) *OpenDCL* ['editor_mfcsamps_asdkFileNav', 'database_xtsndict', 'database_ownrshp', 'entity_hilight' and 24 others]
__declspec(dllimport) void * __cdecl acHeapAlloc(void *,unsigned __int64) *OpenDCL* ['database_elipsjig', 'database_ents', 'database_groups', 'graphics_teselate' and 22 others]
__declspec(dllimport) void __cdecl acHeapFree(void *,void *) *OpenDCL* ['database_elipsjig', 'database_ents', 'database_groups', 'graphics_teselate' and 22 others]
protected: virtual class AcRxObject * __cdecl AcRxObject::subQueryX(class AcRxClass const *)const  *OpenDCL* ['database_elipsjig', 'database_ownrshp', 'entity_tempapp', 'graphics_teselate' and 19 others]
public: virtual enum AcRx::Ordering __cdecl AcRxObject::comparedTo(class AcRxObject const *)const  *OpenDCL* ['database_elipsjig', 'database_ownrshp', 'entity_tempapp', 'graphics_teselate' and 19 others]
public: virtual bool __cdecl AcRxObject::isEqualTo(class AcRxObject const *)const  *OpenDCL* ['database_elipsjig', 'database_ownrshp', 'entity_tempapp', 'graphics_teselate' and 19 others]
public: static class AcRxClass * __cdecl AcDbBlockTableRecord::desc(void) *OpenDCL* ['entity_hilight', 'graphics_teselate', 'graphics_traits', 'editor_mfcsamps_AsdkAcUiSample' and 18 others]
public: enum Acad::ErrorStatus __cdecl AcDbSymbolTable::getIdAt(wchar_t const *,class AcDbObjectId &,bool)const  *OpenDCL* ['reactors_persreac', 'database_complex', 'entity_referenc', 'graphics_viewgeom' and 17 others]
public: enum Acad::ErrorStatus __cdecl AcDbDatabase::getSymbolTable(class AcDbBlockTable * &,enum AcDb::OpenMode) *OpenDCL* ['reactors_persreac', 'database_complex', 'graphics_viewgeom', 'entity_referenc' and 17 others]
public: enum Acad::ErrorStatus __cdecl AcDbBlockTableRecord::appendAcDbEntity(class AcDbObjectId &,class AcDbEntity *) *OpenDCL* ['reactors_ProtocolReactors', 'reactors_persreac', 'database_complex', 'entity_referenc' and 15 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::wblockClone(class AcRxObject *,class AcDbObject * &,class AcDbIdMapping &,bool)const  ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 12 others]
__declspec(dllimport) class AcRxClass * __cdecl acrxFindAcRxClass(wchar_t const *) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 11 others]
__declspec(dllimport) void __cdecl acrxBuildClassHierarchy(void) *OpenDCL* ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 11 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::deepClone(class AcDbObject *,class AcDbObject * &,class AcDbIdMapping &,bool)const  ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 11 others]
__declspec(dllimport) void __cdecl deleteAcRxClass(class AcRxClass *) *OpenDCL* ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 11 others]
public: virtual void __cdecl AcDbObject::modifyUndone(class AcDbObject const *) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::getClassID(struct _GUID *)const  ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual bool __cdecl AcGiDrawable::worldDraw(class AcGiWorldDraw *) *OpenDCL* ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual class AcRxObject * __cdecl AcDbObject::clone(void)const  ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual void __cdecl AcGiDrawable::setDrawStream(class AcGiDrawStream *) *OpenDCL* ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual void __cdecl AcDbObject::modifiedGraphics(class AcDbEntity const *) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::removeField(wchar_t const *,class AcDbObjectId &) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual void __cdecl AcDbObject::reappended(class AcDbObject const *) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::copyFrom(class AcRxObject const *) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual void __cdecl AcDbObject::objectClosed(class AcDbObjectId) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::decomposeForSave(enum AcDb::AcDbDwgVersion,class AcDbObject * &,class AcDbObjectId &,bool &) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual void __cdecl AcDbObject::xmitPropagateModify(void)const  ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual void __cdecl AcDbObject::subObjModified(class AcDbObject const *,class AcDbObject const *) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual class AcGiDrawStream * __cdecl AcGiDrawable::drawStream(void)const  *OpenDCL* ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual void __cdecl AcDbObject::openedForModify(class AcDbObject const *) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::setXData(struct resbuf const *) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual void __cdecl AcDbObject::recvPropagateModify(class AcDbObject const *) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::subCancel(void) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::subClose(void) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
__declspec(dllimport) class AcRxClass * __cdecl newAcRxClass(wchar_t const *,wchar_t const *,int,int,int,class AcRxObject * (__cdecl*)(void),wchar_t const *,wchar_t const *,void (__cdecl*)(class AcRxClass const *,wchar_t * &,int)) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual unsigned int __cdecl AcGiDrawable::viewportDrawLogicalFlags(class AcGiViewportDraw *) *OpenDCL* ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual void __cdecl AcDbObject::unappended(class AcDbObject const *) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
protected: virtual unsigned int __cdecl AcDbObject::subSetAttributes(class AcGiDrawableTraits *) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual void __cdecl AcDbObject::copied(class AcDbObject const *,class AcDbObject const *) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual unsigned int __cdecl AcGiDrawable::setAttributes(class AcGiDrawableTraits *) *OpenDCL* ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::getObjectSaveVersion(class AcDbDxfFiler const *,enum AcDb::AcDbDwgVersion &,enum AcDb::MaintenanceReleaseVersion &) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::getObjectSaveVersion(class AcDbDwgFiler const *,enum AcDb::AcDbDwgVersion &,enum AcDb::MaintenanceReleaseVersion &) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::setOwnerId(class AcDbObjectId) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::swapReferences(class AcDbIdMapping const &) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::subErase(bool) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::subHandOverTo(class AcDbObject *) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::removeField(class AcDbObjectId) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual class AcDbObjectId __cdecl AcDbObject::id(void)const  ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual void __cdecl AcDbObject::modifiedXData(class AcDbObject const *) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::subSwapIdWith(class AcDbObjectId,bool,bool) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual void __cdecl AcDbObject::erased(class AcDbObject const *,bool) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::setField(wchar_t const *,class AcDbField *,class AcDbObjectId &) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual struct resbuf * __cdecl AcDbObject::xData(wchar_t const *)const  ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual enum AcDb::DuplicateRecordCloning __cdecl AcDbObject::mergeStyle(void)const  ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual void __cdecl AcDbObject::cancelled(class AcDbObject const *) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbObject::subDeepClone(class AcDbObject *,class AcDbObject * &,class AcDbIdMapping &,bool)const  ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual void __cdecl AcGiDrawable::viewportDraw(class AcGiViewportDraw *) *OpenDCL* ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual void __cdecl AcDbObject::goodbye(class AcDbObject const *) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual bool __cdecl AcDbObject::isPersistent(void)const  ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::removeField(wchar_t const *) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::subOpen(enum AcDb::OpenMode) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 10 others]
public: virtual void __cdecl AcDbObject::modified(class AcDbObject const *) ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 9 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbObject::subWblockClone(class AcRxObject *,class AcDbObject * &,class AcDbIdMapping &,bool)const  ['graphics_traits', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 9 others]
enum Acad::ErrorStatus __cdecl acdbGetObjectId(class AcDbObjectId &,__int64 const * const) ['entity_AssocFillet', 'database_xtsndict', 'entity_referenc', 'entity_hilight' and 8 others]
public: virtual __cdecl AcDbObject::~AcDbObject(void) ['graphics_traits', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 8 others]
enum Acad::ErrorStatus __cdecl acdbOpenObject(class AcDbObject * &,class AcDbObjectId,enum AcDb::OpenMode,bool,class AcRxClass const *) ['editor_custobj', 'database_xtsndict', 'database_xrecord', 'database_clonenod' and 8 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::highlight(class AcDbFullSubentPath const &,bool)const  ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 7 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::getSubentPathsAtGsMarker(unsigned int,__int64,class AcGePoint3d const &,class AcGeMatrix3d const &,int &,class AcDbFullSubentPath * &,int,class AcDbObjectId *)const  ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 7 others]
public: virtual class AcDbEntity * __cdecl AcDbEntity::subentPtr(class AcDbFullSubentPath const &)const  ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 7 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::unhighlight(class AcDbFullSubentPath const &,bool)const  ['entity_referenc', 'graphics_shell', 'graphics_stylcvrt', 'graphics_icon' and 7 others]
protected: virtual void __cdecl AcDbEntity::subList(void)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual bool __cdecl AcDbEntity::castShadows(void)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::getOsnapPoints(enum AcDb::OsnapMode,__int64,class AcGePoint3d const &,class AcGePoint3d const &,class AcGeMatrix3d const &,class AcArray<class AcGePoint3d,class AcArrayMemCopyReallocator<class AcGePoint3d> > &,class AcArray<int,class AcArrayMemCopyReallocator<int> > &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual bool __cdecl AcDbEntity::subIsContentSnappable(void)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual void __cdecl AcDbEntity::subSetDatabaseDefaults(class AcDbDatabase *) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::moveStretchPointsAt(class AcArray<int,class AcArrayMemCopyReallocator<int> > const &,class AcGeVector3d const &) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual bool __cdecl AcDbEntity::subCloneMeForDragging(void) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subGetGeomExtents(class AcDbExtents &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual void __cdecl AcDbEntity::saveAs(class AcGiWorldDraw *,enum AcDb::SaveType) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::getOsnapPoints(enum AcDb::OsnapMode,__int64,class AcGePoint3d const &,class AcGePoint3d const &,class AcGeMatrix3d const &,class AcArray<class AcGePoint3d,class AcArrayMemCopyReallocator<class AcGePoint3d> > &,class AcArray<int,class AcArrayMemCopyReallocator<int> > &,class AcGeMatrix3d const &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subGetGripPoints(class AcArray<class AcDbGripData *,class AcArrayMemCopyReallocator<class AcDbGripData *> > &,double,int,class AcGeVector3d const &,int)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::setLinetype(wchar_t const *,bool) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::setVisualStyle(class AcDbObjectId,enum AcDbEntity::VisualStyleType,bool) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: class AcDbObjectId __cdecl AcDbObject::objectId(void)const  *OpenDCL* ['database_complex', 'entity_referenc', 'database_ownrshp', 'reactors_othrwblk' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::transformBy(class AcGeMatrix3d const &) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual void __cdecl AcDbEntity::subentGripStatus(enum AcDb::GripStat,class AcDbFullSubentPath const &) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual void __cdecl AcDbEntity::subSubentGripStatus(enum AcDb::GripStat,class AcDbFullSubentPath const &) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::getSubentClassId(class AcDbFullSubentPath const &,struct _GUID *)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subMoveGripPointsAtSubentPaths(class AcArray<class AcDbFullSubentPath,class AcArrayObjectCopyReallocator<class AcDbFullSubentPath> > const &,class AcArray<void *,class AcArrayMemCopyReallocator<void *> > const &,class AcGeVector3d const &,int) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subSetVisibility(enum AcDb::Visibility,bool) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual class AcDbEntity * __cdecl AcDbEntity::subSubentPtr(class AcDbFullSubentPath const &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::getGripPointsAtSubentPath(class AcDbFullSubentPath const &,class AcArray<class AcDbGripData *,class AcArrayMemCopyReallocator<class AcDbGripData *> > &,double,int,class AcGeVector3d const &,int)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual void __cdecl AcDbEntity::setCastShadows(bool) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual bool __cdecl AcDbEntity::receiveShadows(void)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum AcDb::CollisionType __cdecl AcDbEntity::collisionType(void)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subIntersectWith(class AcDbEntity const *,enum AcDb::Intersect,class AcGePlane const &,class AcArray<class AcGePoint3d,class AcArrayMemCopyReallocator<class AcGePoint3d> > &,__int64,__int64)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::getGsMarkersAtSubentPath(class AcDbFullSubentPath const &,class AcArray<__int64,class AcArrayMemCopyReallocator<__int64> > &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual void __cdecl AcDbEntity::gripStatus(enum AcDb::GripStat) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subMoveGripPointsAt(class AcArray<void *,class AcArrayMemCopyReallocator<void *> > const &,class AcGeVector3d const &,int) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subPopHighlight(class AcDbFullSubentPath const &) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual void __cdecl AcDbEntity::subGripStatus(enum AcDb::GripStat) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual void __cdecl AcDbEntity::setReceiveShadows(bool) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::setMaterial(class AcDbObjectId,bool) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::dxfOutFields(class AcDbDxfFiler *)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::transformSubentPathsBy(class AcArray<class AcDbFullSubentPath,class AcArrayObjectCopyReallocator<class AcDbFullSubentPath> > const &,class AcGeMatrix3d const &) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::setVisibility(enum AcDb::Visibility,bool) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::setColor(class AcCmColor const &,bool) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subIntersectWith(class AcDbEntity const *,enum AcDb::Intersect,class AcArray<class AcGePoint3d,class AcArrayMemCopyReallocator<class AcGePoint3d> > &,__int64,__int64)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::addSubentPaths(class AcArray<class AcDbFullSubentPath,class AcArrayObjectCopyReallocator<class AcDbFullSubentPath> > const &) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::setPlotStyleName(wchar_t const *,bool) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subDeleteSubentPaths(class AcArray<class AcDbFullSubentPath,class AcArrayObjectCopyReallocator<class AcDbFullSubentPath> > const &) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::audit(class AcDbAuditInfo *) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::dwgOutFields(class AcDbDwgFiler *)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::deleteSubentPaths(class AcArray<class AcDbFullSubentPath,class AcArrayObjectCopyReallocator<class AcDbFullSubentPath> > const &) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subHighlight(class AcDbFullSubentPath const &,bool)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subGetGsMarkersAtSubentPath(class AcDbFullSubentPath const &,class AcArray<__int64,class AcArrayMemCopyReallocator<__int64> > &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::getGripEntityUCS(void const *,class AcGeVector3d &,class AcGePoint3d &,class AcGeVector3d &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::getSubentPathGeomExtents(class AcDbFullSubentPath const &,class AcDbExtents &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::setLayer(wchar_t const *,bool,bool) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subGetGripPoints(class AcArray<class AcGePoint3d,class AcArrayMemCopyReallocator<class AcGePoint3d> > &,class AcArray<int,class AcArrayMemCopyReallocator<int> > &,class AcArray<int,class AcArrayMemCopyReallocator<int> > &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::setTransparency(class AcCmTransparency const &,bool) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::setLinetypeScale(double,bool) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::getStretchPoints(class AcArray<class AcGePoint3d,class AcArrayMemCopyReallocator<class AcGePoint3d> > &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subGetSubentClassId(class AcDbFullSubentPath const &,struct _GUID *)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::setPlotStyleName(enum AcDb::PlotStyleNameType,class AcDbObjectId,bool) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual bool __cdecl AcDbEntity::bounds(class AcDbExtents &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum AcGiHighlightStyle __cdecl AcDbEntity::subHighlightState(class AcDbFullSubentPath const &) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::setLinetype(class AcDbObjectId,bool) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::dxfInFields(class AcDbDxfFiler *) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subGetGripPointsAtSubentPath(class AcDbFullSubentPath const &,class AcArray<class AcDbGripData *,class AcArrayMemCopyReallocator<class AcDbGripData *> > &,double,int,class AcGeVector3d const &,int)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subGetOsnapPoints(enum AcDb::OsnapMode,__int64,class AcGePoint3d const &,class AcGePoint3d const &,class AcGeMatrix3d const &,class AcArray<class AcGePoint3d,class AcArrayMemCopyReallocator<class AcGePoint3d> > &,class AcArray<int,class AcArrayMemCopyReallocator<int> > &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual bool __cdecl AcDbEntity::cloneMeForDragging(void) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::setMaterial(wchar_t const *,bool) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::dwgInFields(class AcDbDwgFiler *) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subPushHighlight(class AcDbFullSubentPath const &,enum AcGiHighlightStyle) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::setColorIndex(unsigned short,bool) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::setLayer(class AcDbObjectId,bool,bool) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subAddSubentPaths(class AcArray<class AcDbFullSubentPath,class AcArrayObjectCopyReallocator<class AcDbFullSubentPath> > const &) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::moveGripPointsAt(class AcArray<void *,class AcArrayMemCopyReallocator<void *> > const &,class AcGeVector3d const &,int) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subMoveStretchPointsAt(class AcArray<int,class AcArrayMemCopyReallocator<int> > const &,class AcGeVector3d const &) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::applyPartialUndo(class AcDbDwgFiler *,class AcRxClass *) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subGetOsnapPoints(enum AcDb::OsnapMode,__int64,class AcGePoint3d const &,class AcGePoint3d const &,class AcGeMatrix3d const &,class AcArray<class AcGePoint3d,class AcArrayMemCopyReallocator<class AcGePoint3d> > &,class AcArray<int,class AcArrayMemCopyReallocator<int> > &,class AcGeMatrix3d const &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::getGripPoints(class AcArray<class AcGePoint3d,class AcArrayMemCopyReallocator<class AcGePoint3d> > &,class AcArray<int,class AcArrayMemCopyReallocator<int> > &,class AcArray<int,class AcArrayMemCopyReallocator<int> > &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subGetCompoundObjectTransform(class AcGeMatrix3d &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subGetGripEntityUCS(void const *,class AcGeVector3d &,class AcGePoint3d &,class AcGeVector3d &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual bool __cdecl AcDbEntity::isContentSnappable(void)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subUnhighlight(class AcDbFullSubentPath const &,bool)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::getMaterialMapper(class AcGiMapper &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::getCompoundObjectTransform(class AcGeMatrix3d &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subGetTransformedCopy(class AcGeMatrix3d const &,class AcDbEntity * &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual bool __cdecl AcDbEntity::hideMeForDragging(void)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual void __cdecl AcDbEntity::getEcs(class AcGeMatrix3d &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subExplode(class AcArray<void *,class AcArrayMemCopyReallocator<void *> > &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::moveGripPointsAt(class AcArray<int,class AcArrayMemCopyReallocator<int> > const &,class AcGeVector3d const &) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::intersectWith(class AcDbEntity const *,enum AcDb::Intersect,class AcArray<class AcGePoint3d,class AcArrayMemCopyReallocator<class AcGePoint3d> > &,__int64,__int64)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subMoveGripPointsAt(class AcArray<int,class AcArrayMemCopyReallocator<int> > const &,class AcGeVector3d const &) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum AcDb::Visibility __cdecl AcDbEntity::subVisibility(void)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subGetSubentPathGeomExtents(class AcDbFullSubentPath const &,class AcDbExtents &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subTransformSubentPathsBy(class AcArray<class AcDbFullSubentPath,class AcArrayObjectCopyReallocator<class AcDbFullSubentPath> > const &,class AcGeMatrix3d const &) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subGetSubentPathsAtGsMarker(unsigned int,__int64,class AcGePoint3d const &,class AcGeMatrix3d const &,int &,class AcDbFullSubentPath * &,int,class AcDbObjectId *)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual void __cdecl AcDbEntity::dragStatus(enum AcDb::DragStat) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual void __cdecl AcDbEntity::list(void)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual void __cdecl AcDbObject::subViewportDraw(class AcGiViewportDraw *) ['entity_referenc', 'graphics_shell', 'graphics_textstyl', 'graphics_stylcvrt' and 6 others]
protected: virtual bool __cdecl AcDbEntity::subHideMeForDragging(void)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::getGeomExtents(class AcDbExtents &)const  *OpenDCL* ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual class AcGiDrawable * __cdecl AcDbEntity::drawable(void) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::intersectWith(class AcDbEntity const *,enum AcDb::Intersect,class AcGePlane const &,class AcArray<class AcGePoint3d,class AcArrayMemCopyReallocator<class AcGePoint3d> > &,__int64,__int64)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::setLineWeight(enum AcDb::LineWeight,bool) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::setMaterialMapper(class AcGiMapper const &,bool) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::getTransformedCopy(class AcGeMatrix3d const &,class AcDbEntity * &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::getGripPoints(class AcArray<class AcDbGripData *,class AcArrayMemCopyReallocator<class AcDbGripData *> > &,double,int,class AcGeVector3d const &,int)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::explode(class AcArray<void *,class AcArrayMemCopyReallocator<void *> > &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subGetStretchPoints(class AcArray<class AcGePoint3d,class AcArrayMemCopyReallocator<class AcGePoint3d> > &)const  ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::moveGripPointsAtSubentPaths(class AcArray<class AcDbFullSubentPath,class AcArrayObjectCopyReallocator<class AcDbFullSubentPath> > const &,class AcArray<void *,class AcArrayMemCopyReallocator<void *> > const &,class AcGeVector3d const &,int) ['entity_referenc', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 6 others]
public: virtual enum Acad::ErrorStatus __cdecl AcRxObject::copyFrom(class AcRxObject const *) *OpenDCL* ['reactors_ProtocolReactors', 'reactors_inputpoint', 'database_elipsjig', 'database_clonenod' and 5 others]
__declspec(dllimport) public: __cdecl AcGePoint3d::AcGePoint3d(void) *OpenDCL* ['graphics_traits', 'graphics_shell', 'graphics_textstyl', 'graphics_icon' and 5 others]
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subGetClassID(struct _GUID *)const  ['graphics_traits', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 5 others]
public: virtual class AcRxObject * __cdecl AcRxObject::clone(void)const  *OpenDCL* ['reactors_ProtocolReactors', 'reactors_inputpoint', 'database_elipsjig', 'database_clonenod' and 5 others]
protected: __cdecl AcDbEntity::AcDbEntity(void) ['graphics_traits', 'graphics_shell', 'graphics_icon', 'graphics_stylcvrt' and 5 others]
int __cdecl acedGetString(int,wchar_t const *,wchar_t *,unsigned __int64) ['database_complex', 'database_xtsndict', 'database_xrecord', 'entity_hilight' and 4 others]
public: void __cdecl AcDbObject::assertWriteEnabled(bool,bool) ['entity_referenc', 'graphics_icon', 'graphics_viewgeom', 'entity_AssocFillet' and 4 others]
__declspec(dllimport) protected: __cdecl AcRxObject::AcRxObject(void) *OpenDCL* ['reactors_ProtocolReactors', 'reactors_inputpoint', 'database_clonenod', 'reactors_othrwblk' and 4 others]
public: enum Acad::ErrorStatus __cdecl AcDbDictionary::setAt(wchar_t const *,class AcDbObject *,class AcDbObjectId &) ['database_xtsndict', 'database_xrecord', 'database_clonenod', 'database_ents' and 4 others]
int __cdecl acutRelRb(struct resbuf *) *OpenDCL* ['database_xtsndict', 'database_xrecord', 'entity_hilight', 'entity_AssocFillet' and 3 others]
public: class AcDbObjectId __cdecl AcDbObject::ownerId(void)const  ['entity_referenc', 'entity_AssocFillet', 'editor_custobj', 'editor_mfcsamps_modeless' and 2 others]
public: void __cdecl AcDbObject::assertReadEnabled(void)const  ['entity_referenc', 'entity_AssocFillet', 'editor_custobj', 'reactors_persreac' and 2 others]
int __cdecl acedInitGet(int,wchar_t const *) ['database_xtsndict', 'database_clonreac', 'entity_AssocFillet', 'database_xdata' and 2 others]
public: enum Acad::ErrorStatus __cdecl AcDbDictionary::getAt(wchar_t const *,class AcDbObjectId &)const  ['database_xtsndict', 'database_xrecord', 'database_clonenod', 'editor_custobj' and 2 others]
__declspec(dllimport) public: wchar_t const * __cdecl AcRxClass::name(void)const  ['database_complex', 'entity_referenc', 'database_testdb', 'editor_mfcsamps_modeless' and 2 others]
int __cdecl acedEntSel(wchar_t const *,__int64 * const,double * const) ['database_xdata', 'database_xtsndict', 'database_pliniter', 'database_curve' and 1 others]
__declspec(dllimport) public: class AcGePoint3d & __cdecl AcGePoint3d::transformBy(class AcGeMatrix3d const &) ['graphics_textstyl', 'graphics_coordsys', 'entity_AssocFillet', 'graphics_icon' and 1 others]
__declspec(dllimport) public: __cdecl AcGeMatrix3d::AcGeMatrix3d(void) *OpenDCL* ['graphics_viewgeom', 'graphics_coordsys', 'graphics_textstyl', 'entity_hilight' and 1 others]
public: enum Acad::ErrorStatus __cdecl AcDbDatabase::getNamedObjectsDictionary(class AcDbDictionary * &,enum AcDb::OpenMode) ['editor_custobj', 'reactors_persreac', 'database_clonenod', 'database_xrecord' and 1 others]
public: __cdecl AcDbDictionary::AcDbDictionary(void) ['editor_custobj', 'reactors_persreac', 'database_clonenod', 'database_xrecord' and 1 others]
bool __cdecl acrxRegisterAppMDIAware(void *) ['reactors_ProtocolReactors', 'editor_mfcsamps_dynamic', 'editor_mfcsamps_modeless', 'reactors_inputpoint' and 1 others]
protected: virtual bool __cdecl AcDbObject::subWorldDraw(class AcGiWorldDraw *) ['editor_custobj', 'entity_AssocFillet', 'entity_referenc', 'reactors_persreac' and 1 others]
public: enum Acad::ErrorStatus __cdecl AcDbSymbolTableRecord::setName(wchar_t const *) ['reactors_ProtocolReactors', 'database_complex', 'database_tablerec', 'database_ents' and 1 others]
class AcApDocManager * __cdecl acDocManagerPtr(void) *OpenDCL* ['reactors_inputpoint', 'editor_mfcsamps_modeless', 'reactors_dbreact', 'entity_referenc' and 1 others]
public: virtual void __cdecl AcEditorReactor::sysVarChanged(wchar_t const *,bool) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::beginQuit(void) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::databaseConstructed(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::modelessOperationEnded(wchar_t const *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::redirected(class AcDbObjectId,class AcDbObjectId) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::objectsLazyLoaded(class AcArray<class AcDbObjectId,class AcArrayMemCopyReallocator<class AcDbObjectId> > const &) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::abortInsert(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::beginWblock(class AcDbDatabase *,class AcDbDatabase *,class AcGePoint3d const * &) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::toolbarBitmapSizeWillChange(bool) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::docFrameMovedOrResized(__int64,bool) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
__declspec(dllimport) public: static class AcGeTol AcGeContext::gTol *OpenDCL* ['graphics_textstyl', 'database_elipsjig', 'reactors_persreac', 'entity_AssocFillet']
public: virtual void __cdecl AcEditorReactor::beginSave(class AcDbDatabase *,wchar_t const *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
int __cdecl acedSSFree(__int64 const * const) ['entity_AssocFillet', 'database_deepclon', 'database_groups', 'entity_hilight']
public: virtual void __cdecl AcEditorReactor::endRestore(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::unknownCommand(wchar_t const *,class AcArray<void *,class AcArrayMemCopyReallocator<void *> > *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::mainFrameMovedOrResized(__int64,bool) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::beginRightClick(class AcGePoint3d const &) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
enum Acad::ErrorStatus __cdecl acdbOpenObject(class AcDbEntity * &,class AcDbObjectId,enum AcDb::OpenMode,bool) ['entity_tempapp', 'entity_hilight', 'database_ents', 'database_AsdkLongTransSample']
public: virtual void __cdecl AcEditorReactor::cmdIUnkModified(wchar_t const *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::dxfInComplete(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::endDeepClone(class AcDbIdMapping &) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: enum Acad::ErrorStatus __cdecl AcDbSymbolTable::add(class AcDbSymbolTableRecord *) ['reactors_ProtocolReactors', 'database_tablerec', 'database_ents', 'database_entswerr']
public: virtual void __cdecl AcEditorReactor::undoSubcommandControl(int,int) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::beginWblockObjects(class AcDbDatabase *,class AcDbIdMapping &) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::abortDxfIn(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::beginClose(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::abortWblock(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::xrefSubcommandDetachItem(class AcDbDatabase *,int,class AcDbObjectId) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::otherWblock(class AcDbDatabase *,class AcDbIdMapping &,class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::abortAttach(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::undoSubcommandAuto(int,bool) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::dwgInFields(class AcDbDwgFiler *) ['editor_custobj', 'entity_AssocFillet', 'reactors_persreac', 'database_ownrshp']
public: virtual void __cdecl AcRxEventReactor::abortSave(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::databaseConstructed(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::xrefSubcommandReloadItem(class AcDbDatabase *,int,class AcDbObjectId) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::wblockNotice(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::xrefSubcommandBindItem(class AcDbDatabase *,int,class AcDbObjectId) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::beginDxfOut(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::xrefSubcommandBindItem(class AcDbDatabase *,int,class AcDbObjectId) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::undoSubcommandMark(int) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::dxfOutComplete(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::endWblock(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::sysVarWillChange(wchar_t const *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::xrefSubCommandStart(class AcDbDatabase *,enum AcXrefSubCommand,class AcArray<class AcDbObjectId,class AcArrayMemCopyReallocator<class AcDbObjectId> > const &,wchar_t const * const *,wchar_t const * const *,bool &) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::otherAttach(class AcDbDatabase *,class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
protected: virtual enum Acad::ErrorStatus __cdecl AcDbObject::subGetClassID(struct _GUID *)const  ['editor_custobj', 'entity_AssocFillet', 'reactors_persreac', 'database_ownrshp']
public: virtual void __cdecl AcRxEventReactor::beginDeepClone(class AcDbDatabase *,class AcDbIdMapping &) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::viewChanged(void) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::xrefSubcommandReloadItem(class AcDbDatabase *,int,class AcDbObjectId) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::beginWblock(class AcDbDatabase *,class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::endInsert(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::undoSubcommandEnd(int) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::beginAttach(class AcDbDatabase *,wchar_t const *,class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: static class AcRxClass * __cdecl AcDbLine::desc(void) ['reactors_inputpoint', 'database_groups', 'reactors_persreac', 'database_AsdkLongTransSample']
public: virtual void __cdecl AcRxEventReactor::endDeepClone(class AcDbIdMapping &) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::audit(class AcDbAuditInfo *) ['editor_custobj', 'entity_AssocFillet', 'reactors_persreac', 'database_ownrshp']
public: virtual void __cdecl AcRxEventReactor::beginInsert(class AcDbDatabase *,class AcGeMatrix3d const &,class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::beginDeepCloneXlation(class AcDbIdMapping &,enum Acad::ErrorStatus *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::dwgOutFields(class AcDbDwgFiler *)const  ['editor_custobj', 'entity_AssocFillet', 'reactors_persreac', 'database_ownrshp']
public: virtual void __cdecl AcRxEventReactor::abortInsert(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::beginDeepCloneXlation(class AcDbIdMapping &,enum Acad::ErrorStatus *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::xrefSubCommandEnd(class AcDbDatabase *,enum AcXrefSubCommand,class AcArray<class AcDbObjectId,class AcArrayMemCopyReallocator<class AcDbObjectId> > const &,wchar_t const * const *,wchar_t const * const *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::xrefSubcommandDetachItem(class AcDbDatabase *,int,class AcDbObjectId) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual class AcRxClass * __cdecl AcEditorReactor::isA(void)const  *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::dxfOutComplete(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::beginAttach(class AcDbDatabase *,wchar_t const *,class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::beginSave(class AcDbDatabase *,wchar_t const *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::beginDoubleClick(class AcGePoint3d const &) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::abortDxfIn(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::undoSubcommandNumber(int,int) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
int __cdecl acedSSGet(wchar_t const *,void const *,void const *,struct resbuf const *,__int64 * const) ['entity_AssocFillet', 'database_deepclon', 'database_groups', 'entity_hilight']
bool __cdecl acrxUnlockApplication(void *) ['reactors_ProtocolReactors', 'editor_mfcsamps_dynamic', 'reactors_inputpoint', 'reactors_dbreact']
public: virtual void __cdecl AcRxEventReactor::xrefSubcommandPathItem(int,class AcDbObjectId,wchar_t const *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::beginWblock(class AcDbDatabase *,class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::dwgFileOpened(class AcDbDatabase *,wchar_t *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::toolbarBitmapSizeChanged(bool) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::dwgFileOpened(class AcDbDatabase *,wchar_t *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::initialDwgFileOpenComplete(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::endDwgOpen(wchar_t const *,class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::xrefSubCommandAborted(class AcDbDatabase *,enum AcXrefSubCommand,class AcArray<class AcDbObjectId,class AcArrayMemCopyReallocator<class AcDbObjectId> > const &,wchar_t const * const *,wchar_t const * const *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::endInsert(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::beginDxfIn(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::endWblock(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::abortRestore(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::endAttach(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::endAttach(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::otherInsert(class AcDbDatabase *,class AcDbIdMapping &,class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual enum Acad::ErrorStatus __cdecl AcEditorReactor::xrefSubCommandStart(enum AcXrefSubCommand,class AcArray<class AcDbObjectId,class AcArrayMemCopyReallocator<class AcDbObjectId> > const &,wchar_t const * const *,wchar_t const * const *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::lispCancelled(void) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::abortSave(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: enum Acad::ErrorStatus __cdecl AcDbDatabase::getSymbolTable(class AcDbLinetypeTable * &,enum AcDb::OpenMode) ['database_tbliter', 'database_entswerr', 'graphics_traits', 'database_tablerec']
public: virtual void __cdecl AcRxEventReactor::xrefSubcommandUnloadItem(class AcDbDatabase *,int,class AcDbObjectId) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::endRestore(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::otherAttach(class AcDbDatabase *,class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::abortWblock(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::beginWblock(class AcDbDatabase *,class AcDbDatabase *,class AcGePoint3d const * &) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::saveComplete(class AcDbDatabase *,wchar_t const *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::beginWblock(class AcDbDatabase *,class AcDbDatabase *,class AcDbObjectId) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::beginDxfIn(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::lispEnded(void) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::commandWillStart(wchar_t const *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::beginDwgOpen(wchar_t *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual class AcGiDrawable * __cdecl AcDbObject::drawable(void) ['editor_custobj', 'entity_AssocFillet', 'reactors_persreac', 'database_ownrshp']
public: virtual void __cdecl AcRxEventReactor::beginRestore(class AcDbDatabase *,wchar_t const *,class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::xrefSubcommandUnloadItem(class AcDbDatabase *,int,class AcDbObjectId) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::modelessOperationWillStart(wchar_t const *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::comandeered(class AcDbDatabase *,class AcDbObjectId,class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::abortDeepClone(class AcDbIdMapping &) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::layoutSwitched(wchar_t const *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::preXrefLockFile(class AcDbObjectId) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::lispWillStart(wchar_t const *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::xrefSubcommandOverlayItem(class AcDbDatabase *,int,wchar_t const *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::commandCancelled(wchar_t const *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::quitWillStart(void) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::applyPartialUndo(class AcDbDwgFiler *,class AcRxClass *) ['editor_custobj', 'entity_AssocFillet', 'reactors_persreac', 'database_ownrshp']
public: virtual void __cdecl AcEditorReactor::databaseToBeDestroyed(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::commandEnded(wchar_t const *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::beginWblockObjects(class AcDbDatabase *,class AcDbIdMapping &) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::comandeered(class AcDbDatabase *,class AcDbObjectId,class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: static class AcRxClass * __cdecl AcEditor::desc(void) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::undoSubcommandBegin(int) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::abortDxfOut(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::dxfInFields(class AcDbDxfFiler *) ['editor_custobj', 'entity_AssocFillet', 'reactors_persreac', 'database_ownrshp']
public: virtual void __cdecl AcEditorReactor::abortRestore(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::beginDxfOut(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::beginDeepClone(class AcDbDatabase *,class AcDbIdMapping &) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::xrefSubcommandPathItem(int,class AcDbObjectId,wchar_t const *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::saveComplete(class AcDbDatabase *,wchar_t const *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::xrefSubcommandOverlayItem(class AcDbDatabase *,int,wchar_t const *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::beginInsert(class AcDbDatabase *,class AcGeMatrix3d const &,class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::xrefSubcommandAttachItem(class AcDbDatabase *,int,wchar_t const *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual enum Acad::ErrorStatus __cdecl AcDbObject::dxfOutFields(class AcDbDxfFiler *)const  ['editor_custobj', 'entity_AssocFillet', 'reactors_persreac', 'database_ownrshp']
public: virtual void __cdecl AcRxEventReactor::otherWblock(class AcDbDatabase *,class AcDbIdMapping &,class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::abortDxfOut(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: enum Acad::ErrorStatus __cdecl AcDbDatabase::getSymbolTable(class AcDbLayerTable * &,enum AcDb::OpenMode) *OpenDCL* ['database_tablerec', 'database_ents', 'graphics_traits', 'database_entswerr']
public: virtual void __cdecl AcRxEventReactor::beginInsert(class AcDbDatabase *,wchar_t const *,class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::otherInsert(class AcDbDatabase *,class AcDbIdMapping &,class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::undoSubcommandBack(int) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual class AcRxClass * __cdecl AcRxEventReactor::isA(void)const  *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::commandFailed(wchar_t const *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::dxfInComplete(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::beginInsert(class AcDbDatabase *,wchar_t const *,class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::wblockNotice(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::beginRestore(class AcDbDatabase *,wchar_t const *,class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::abortAttach(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::redirected(class AcDbObjectId,class AcDbObjectId) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::databaseToBeDestroyed(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::beginWblock(class AcDbDatabase *,class AcDbDatabase *,class AcDbObjectId) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::xrefSubcommandAttachItem(class AcDbDatabase *,int,wchar_t const *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::preXrefLockFile(class AcDbDatabase *,class AcDbObjectId) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::partialOpenNotice(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
__declspec(dllimport) public: class AcGeVector3d __cdecl AcGeVector3d::crossProduct(class AcGeVector3d const &)const  *OpenDCL* ['graphics_textstyl', 'entity_AssocFillet', 'database_elipsjig', 'graphics_viewgeom']
public: virtual void __cdecl AcRxEventReactor::abortDeepClone(class AcDbIdMapping &) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: enum Acad::ErrorStatus __cdecl AcDbSymbolTableIterator::getRecordId(class AcDbObjectId &)const  *OpenDCL* ['database_tbliter', 'graphics_stylcvrt', 'editor_mfcsamps_AsdkAcUiSample', 'database_clonreac']
public: virtual void __cdecl AcEditorReactor::quitAborted(void) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcRxEventReactor::initialDwgFileOpenComplete(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::partialOpenNotice(class AcDbDatabase *) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: virtual void __cdecl AcEditorReactor::pickfirstModified(void) *OpenDCL* ['reactors_othrwblk', 'database_clonenod', 'database_clonreac', 'editor_mfcsamps_modeless']
public: bool __cdecl AcDbBlockTableRecordIterator::done(void)const  *OpenDCL* ['database_complex', 'database_testdb', 'database_AsdkLongTransSample']
public: void __cdecl AcDbBlockTableRecordIterator::step(bool,bool) *OpenDCL* ['database_complex', 'database_testdb', 'database_AsdkLongTransSample']
int __cdecl acedSSLength(__int64 const * const,int *) ['database_deepclon', 'database_groups', 'entity_AssocFillet']
public: void __cdecl AcDbSymbolTableIterator::step(bool,bool) *OpenDCL* ['database_tbliter', 'editor_mfcsamps_AsdkAcUiSample', 'database_clonreac']
__declspec(dllimport) public: double __cdecl AcGeVector3d::length(void)const  *OpenDCL* ['database_elipsjig', 'reactors_persreac', 'entity_AssocFillet']
public: void __cdecl AcDbBlockTableRecordIterator::start(bool,bool) *OpenDCL* ['database_complex', 'database_testdb', 'database_AsdkLongTransSample']
public: __cdecl AcDbXrecord::AcDbXrecord(void) ['database_xtsndict', 'database_clonenod', 'database_xrecord']
public: __cdecl AcDbCircle::AcDbCircle(class AcGePoint3d const &,class AcGeVector3d const &,double) ['database_testdb', 'database_ents', 'database_entswerr']
public: enum AcDb::DeepCloneType __cdecl AcDbIdMapping::deepCloneContext(void)const  ['database_clonenod', 'database_clonreac', 'entity_referenc']
int __cdecl acedSSName(__int64 const * const,int,__int64 * const) ['database_deepclon', 'database_groups', 'entity_AssocFillet']
public: static class AcRxClass * __cdecl AcDbDictionary::desc(void) ['editor_custobj', 'database_xtsndict', 'database_clonenod']
int __cdecl acedGetKword(wchar_t const *,wchar_t *,unsigned __int64) ['editor_mfcsamps_modeless', 'database_curve', 'entity_AssocFillet']
__declspec(dllimport) public: class AcGeVector3d & __cdecl AcGeVector3d::normalize(class AcGeTol const &) *OpenDCL* ['graphics_textstyl', 'database_elipsjig', 'entity_AssocFillet']
public: bool __cdecl AcDbSymbolTableIterator::done(void)const  *OpenDCL* ['database_tbliter', 'editor_mfcsamps_AsdkAcUiSample', 'database_clonreac']
public: enum Acad::ErrorStatus __cdecl AcDbBlockTableRecordIterator::getEntity(class AcDbEntity * &,enum AcDb::OpenMode,bool)const  *OpenDCL* ['database_complex', 'database_testdb', 'database_AsdkLongTransSample']
public: static class AcRxClass * __cdecl AcDbEntity::desc(void) ['editor_mfcsamps_modeless', 'entity_tempapp', 'entity_AssocFillet']
public: __cdecl AcDbLayerTableRecord::AcDbLayerTableRecord(void) ['database_tablerec', 'database_ents', 'database_entswerr']
protected: __cdecl AcDbObject::AcDbObject(void) ['editor_custobj', 'reactors_persreac', 'database_ownrshp']
public: enum Acad::ErrorStatus __cdecl AcDbBlockTableRecord::newIterator(class AcDbBlockTableRecordIterator * &,bool,bool)const  *OpenDCL* ['database_complex', 'database_testdb', 'database_AsdkLongTransSample']
int __cdecl acedGetVar(wchar_t const *,struct resbuf *) *OpenDCL* ['database_complex', 'database_elipsjig', 'entity_AssocFillet']
int __cdecl acedGetPoint(double const * const,wchar_t const *,double * const) ['database_complex', 'database_elipsjig', 'editor_mfcsamps_AsdkAcUiSample']
public: void __cdecl AcDbObject::getAcDbHandle(class AcDbHandle &)const  ['database_complex', 'editor_mfcsamps_modeless', 'reactors_dbreact']
public: class AcDbDictionaryIterator * __cdecl AcDbDictionary::newIterator(void)const  ['editor_custobj', 'database_clonenod', 'database_ownrshp']
public: class AcDbDatabase * __cdecl AcDbObject::database(void)const  *OpenDCL* ['entity_AssocFillet', 'entity_referenc', 'reactors_dbreact']
wchar_t const * __cdecl acadErrorStatusText(enum Acad::ErrorStatus) ['entity_AssocFillet', 'database_entswerr', 'entity_referenc']
public: bool __cdecl AcDbHandle::getIntoAsciiBuffer(wchar_t *,unsigned __int64)const  ['database_complex', 'editor_mfcsamps_modeless', 'reactors_dbreact']
protected: virtual void __cdecl CAdUiDialog::OnInitDialogBegin(void) ['editor_mfcsamps_AsdkAcUiSample', 'editor_mfcsamps_asdkFileNav']
protected: virtual enum ADUI_REPLY __cdecl CAdUiBaseDialog::OnNotifyUpdateTip(class CWnd *) *OpenDCL* ['editor_mfcsamps_AsdkAcUiSample', 'editor_mfcsamps_asdkFileNav']
public: __cdecl AcDbGroup::AcDbGroup(wchar_t const *,bool) ['database_ents', 'database_groups']
public: static class AcRxClass * __cdecl AcDbTextStyleTableRecord::desc(void) *OpenDCL* ['graphics_stylcvrt', 'database_clonreac']
public: enum Acad::ErrorStatus __cdecl AcDbDatabase::addReactor(class AcDbDatabaseReactor *)const  *OpenDCL* ['editor_mfcsamps_modeless', 'reactors_dbreact']
__declspec(dllimport) public: static class AcRxClass * __cdecl AcRxDictionary::desc(void) ['reactors_ProtocolReactors', 'entity_tempapp']
public: virtual void __cdecl AcApDocManagerReactor::documentLockModeWillChange(class AcApDocument *,enum AcAp::DocLockMode,enum AcAp::DocLockMode,enum AcAp::DocLockMode,wchar_t const *) *OpenDCL* ['editor_mfcsamps_modeless', 'reactors_dbreact']
__declspec(dllimport) public: class AcGeVector3d __cdecl AcGeVector3d::normal(class AcGeTol const &)const  *OpenDCL* ['reactors_persreac', 'entity_AssocFillet']
public: __cdecl AcDbIdPair::AcDbIdPair(void) ['database_deepclon', 'reactors_othrwblk']
public: enum Acad::ErrorStatus __cdecl AcDbIdMapping::origDb(class AcDbDatabase * &)const  ['database_clonenod', 'database_clonreac']
public: __cdecl AcDbIdPair::AcDbIdPair(class AcDbObjectId,class AcDbObjectId,bool,bool,bool) ['entity_referenc', 'entity_AssocFillet']
public: virtual void __cdecl AcApDocManagerReactor::documentActivated(class AcApDocument *) *OpenDCL* ['editor_mfcsamps_modeless', 'reactors_dbreact']
protected: virtual enum ADUI_REPLY __cdecl CAdUiBaseDialog::OnNotifyControlValid(unsigned int,int) *OpenDCL* ['editor_mfcsamps_AsdkAcUiSample', 'editor_mfcsamps_asdkFileNav']
public: enum Acad::ErrorStatus __cdecl AcDbDatabase::readDwgFile(wchar_t const *,enum AcDbDatabase::OpenMode,bool,wchar_t const *) *OpenDCL* ['database_testdb', 'database_AsdkLongTransSample']
public: enum Acad::ErrorStatus __cdecl AcDbDatabase::saveAs(wchar_t const *,bool,enum AcDb::AcDbDwgVersion,struct SecurityParams const *) ['database_testdb', 'database_AsdkLongTransSample']
public: __cdecl AcDbDatabase::AcDbDatabase(bool,bool) *OpenDCL* ['database_testdb', 'database_AsdkLongTransSample']
public: virtual void __cdecl AcGiFaceData::setColors(short const *) ['graphics_mesh', 'graphics_shell']
public: virtual __cdecl AcDbIdMapping::~AcDbIdMapping(void) ['database_deepclon', 'database_AsdkLongTransSample']
public: enum Acad::ErrorStatus __cdecl AcDbObject::upgradeOpen(void) ['database_xdata', 'database_clonenod']
__declspec(dllimport) public: __cdecl AcRxResourceInstance::AcRxResourceInstance(void *) *OpenDCL* ['editor_mfcsamps_AsdkAcUiSample', 'entity_AssocFillet']
protected: virtual void __cdecl CAdUiBaseDialog::PostNcDestroy(void) *OpenDCL* ['editor_mfcsamps_AsdkAcUiSample', 'editor_mfcsamps_asdkFileNav']
public: virtual void __cdecl AcDbDatabaseReactor::objectReAppended(class AcDbDatabase const *,class AcDbObject const *) *OpenDCL* ['editor_mfcsamps_modeless', 'reactors_dbreact']
public: virtual void __cdecl AcDbDatabaseReactor::objectOpenedForModify(class AcDbDatabase const *,class AcDbObject const *) *OpenDCL* ['editor_mfcsamps_modeless', 'reactors_dbreact']
__declspec(dllimport) public: wchar_t const * __cdecl AcString::kwszPtr(void)const  ['reactors_ProtocolReactors', 'entity_AssocFillet']
public: virtual void __cdecl AcApDocManagerReactor::documentDestroyed(wchar_t const *) *OpenDCL* ['editor_mfcsamps_modeless', 'reactors_dbreact']
struct resbuf * __cdecl acutNewRb(int) *OpenDCL* ['database_xdata', 'database_AsdkLongTransSample']
int __cdecl acedSetVar(wchar_t const *,struct resbuf const *) *OpenDCL* ['reactors_AsdkProfileSample', 'entity_AssocFillet']
public: virtual void __cdecl AcApDocManagerReactor::documentActivationModified(bool) *OpenDCL* ['editor_mfcsamps_modeless', 'reactors_dbreact']
public: enum Acad::ErrorStatus __cdecl AcDbSymbolTableRecord::getName(wchar_t const * &)const  *OpenDCL* ['database_tbliter', 'editor_mfcsamps_AsdkAcUiSample']
public: void __cdecl CAdUiDialog::SetDialogName(wchar_t const *) ['editor_mfcsamps_AsdkAcUiSample', 'editor_mfcsamps_asdkFileNav']
public: __cdecl AcGiEdgeData::AcGiEdgeData(void) ['graphics_mesh', 'graphics_shell']
__declspec(dllimport) public: static class AcGeVector3d const AcGeVector3d::kZAxis *OpenDCL* ['reactors_inputpoint', 'entity_AssocFillet']
public: __cdecl AcGiTextStyle::AcGiTextStyle(class AcDbDatabase *) ['graphics_textstyl', 'graphics_stylcvrt']
__declspec(dllimport) public: __cdecl AcString::AcString(void) ['reactors_ProtocolReactors', 'entity_AssocFillet']
public: __cdecl AcDbLine::AcDbLine(void) *OpenDCL* ['database_complex', 'reactors_persreac']
int __cdecl acdbHandEnt(wchar_t const *,__int64 * const) ['database_xdata', 'database_xtsndict']
public: enum Acad::ErrorStatus __cdecl AcDbDatabase::getGroupDictionary(class AcDbDictionary * &,enum AcDb::OpenMode) ['database_ents', 'database_groups']
struct HWND__ * __cdecl adsw_acadMainWnd(void) *OpenDCL* ['editor_mfcsamps_AsdkAcUiSample', 'editor_mfcsamps_asdkFileNav']
public: enum Acad::ErrorStatus __cdecl AcDbXrecord::rbChain(struct resbuf * *,class AcDbDatabase *)const  ['database_xtsndict', 'database_xrecord']
public: virtual int __cdecl CAdUiBaseDialog::PreTranslateMessage(struct tagMSG *) ['editor_mfcsamps_AsdkAcUiSample', 'editor_mfcsamps_asdkFileNav']
public: __cdecl AcDbBlockTableRecord::AcDbBlockTableRecord(void) ['reactors_ProtocolReactors', 'database_complex']
__declspec(dllimport) public: static class AcGePoint3d const AcGePoint3d::kOrigin ['database_curve', 'entity_AssocFillet']
protected: virtual int __cdecl CAdUiBaseDialog::PreCreateWindow(struct tagCREATESTRUCTW &) *OpenDCL* ['editor_mfcsamps_AsdkAcUiSample', 'editor_mfcsamps_asdkFileNav']
public: virtual void __cdecl AcApDocManagerReactor::documentBecameCurrent(class AcApDocument *) *OpenDCL* ['editor_mfcsamps_modeless', 'reactors_dbreact']
int __cdecl acdbRegApp(wchar_t const *) ['database_xdata', 'editor_mfcsamps_AsdkAcUiSample']
public: virtual void __cdecl AcDbDatabaseReactor::headerSysVarWillChange(class AcDbDatabase const *,wchar_t const *) *OpenDCL* ['editor_mfcsamps_modeless', 'reactors_dbreact']
int __cdecl acedSSNameX(struct resbuf * *,__int64 const * const,int) ['entity_hilight', 'entity_AssocFillet']
public: virtual class AcRxClass * __cdecl AcApDocManagerReactor::isA(void)const  *OpenDCL* ['editor_mfcsamps_modeless', 'reactors_dbreact']
public: virtual int __cdecl CAdUiBaseDialog::ExchangeData(int) *OpenDCL* ['editor_mfcsamps_AsdkAcUiSample', 'editor_mfcsamps_asdkFileNav']
public: void __cdecl AcDbEntity::setDatabaseDefaults(class AcDbDatabase *) ['reactors_persreac', 'entity_AssocFillet']
public: virtual void __cdecl AcApDocManagerReactor::documentToBeDeactivated(class AcApDocument *) *OpenDCL* ['editor_mfcsamps_modeless', 'reactors_dbreact']
public: bool __cdecl AcDbObject::isReadEnabled(void)const  ['editor_custobj', 'entity_AssocFillet']
int __cdecl acedDefun(wchar_t const *,int) *OpenDCL* ['misc_fact', 'entity_AssocFillet']
public: virtual void __cdecl AcApDocManagerReactor::documentCreateCanceled(class AcApDocument *) *OpenDCL* ['editor_mfcsamps_modeless', 'reactors_dbreact']
public: virtual void __cdecl AcDbDatabaseReactor::goodbye(class AcDbDatabase const *) ['editor_mfcsamps_modeless', 'reactors_dbreact']
public: enum Acad::ErrorStatus __cdecl AcDbLine::setStartPoint(class AcGePoint3d const &) *OpenDCL* ['database_complex', 'reactors_persreac']
public: virtual void __cdecl AcDbDatabaseReactor::objectUnAppended(class AcDbDatabase const *,class AcDbObject const *) *OpenDCL* ['editor_mfcsamps_modeless', 'reactors_dbreact']
__declspec(dllimport) public: class AcGeVector3d __cdecl AcGePoint3d::operator-(class AcGePoint3d const &)const  *OpenDCL* ['reactors_persreac', 'entity_AssocFillet']
public: __cdecl AcDbLine::AcDbLine(class AcGePoint3d const &,class AcGePoint3d const &) ['reactors_ProtocolReactors', 'database_ents']
public: enum Acad::ErrorStatus __cdecl AcDbIdMapping::destDb(class AcDbDatabase * &)const  ['database_clonenod', 'database_clonreac']
public: virtual int __cdecl CAdUiBaseDialog::Create(unsigned int,class CWnd *) *OpenDCL* ['editor_mfcsamps_AsdkAcUiSample', 'editor_mfcsamps_asdkFileNav']
public: __cdecl AcGiFaceData::AcGiFaceData(void) ['graphics_mesh', 'graphics_shell']
public: virtual void __cdecl AcDbDatabaseReactor::proxyResurrectionCompleted(class AcDbDatabase const *,wchar_t const *,class AcArray<class AcDbObjectId,class AcArrayMemCopyReallocator<class AcDbObjectId> > &) *OpenDCL* ['editor_mfcsamps_modeless', 'reactors_dbreact']
public: __cdecl AcDbIdMapping::AcDbIdMapping(void) ['database_deepclon', 'database_AsdkLongTransSample']
public: virtual int __cdecl CAdUiDialog::DoDialogHelp(void) *OpenDCL* ['editor_mfcsamps_AsdkAcUiSample', 'editor_mfcsamps_asdkFileNav']
__declspec(dllimport) public: __cdecl AcString::~AcString(void) ['reactors_ProtocolReactors', 'entity_AssocFillet']
public: virtual __int64 __cdecl CAdUiBaseDialog::DoModal(void) *OpenDCL* ['editor_mfcsamps_AsdkAcUiSample', 'editor_mfcsamps_asdkFileNav']
public: virtual void __cdecl AcApDocManagerReactor::documentLockModeChanged(class AcApDocument *,enum AcAp::DocLockMode,enum AcAp::DocLockMode,enum AcAp::DocLockMode,wchar_t const *) *OpenDCL* ['editor_mfcsamps_modeless', 'reactors_dbreact']
__declspec(dllimport) public: __cdecl AcRxResourceInstance::~AcRxResourceInstance(void) *OpenDCL* ['editor_mfcsamps_AsdkAcUiSample', 'entity_AssocFillet']
public: enum Acad::ErrorStatus __cdecl AcDbDatabase::removeReactor(class AcDbDatabaseReactor *)const  *OpenDCL* ['editor_mfcsamps_modeless', 'reactors_dbreact']
public: virtual void __cdecl AcDbDatabaseReactor::headerSysVarChanged(class AcDbDatabase const *,wchar_t const *,bool) *OpenDCL* ['editor_mfcsamps_modeless', 'reactors_dbreact']
public: enum Acad::ErrorStatus __cdecl AcDbTextStyleTable::newIterator(class AcDbTextStyleTableIterator * &,bool,bool)const  *OpenDCL* ['graphics_stylcvrt', 'database_clonreac']
public: virtual void __cdecl AcApDocManagerReactor::documentCreateStarted(class AcApDocument *) *OpenDCL* ['editor_mfcsamps_modeless', 'reactors_dbreact']
int __cdecl acedGetDist(double const * const,wchar_t const *,double *) ['database_complex', 'entity_AssocFillet']
public: virtual void __cdecl AcApDocManagerReactor::documentLockModeChangeVetoed(class AcApDocument *,wchar_t const *) *OpenDCL* ['editor_mfcsamps_modeless', 'reactors_dbreact']
public: enum Acad::ErrorStatus __cdecl AcDbGroup::append(class AcDbObjectId) ['database_ents', 'database_groups']
__declspec(dllimport) public: __cdecl AcGePlane::~AcGePlane(void) ['database_curve', 'entity_AssocFillet']
public: virtual __cdecl AcGiEdgeData::~AcGiEdgeData(void) ['graphics_mesh', 'graphics_shell']
public: enum Acad::ErrorStatus __cdecl AcDbLine::setEndPoint(class AcGePoint3d const &) *OpenDCL* ['database_complex', 'reactors_persreac']
public: virtual class AcRxClass * __cdecl AcDbDatabaseReactor::isA(void)const  *OpenDCL* ['editor_mfcsamps_modeless', 'reactors_dbreact']
public: virtual void __cdecl AcGiEdgeData::setColors(short const *) ['graphics_mesh', 'graphics_shell']
protected: virtual enum ADUI_REPLY __cdecl CAdUiBaseDialog::DoAdUiMessage(enum ADUI_NOTIFY,unsigned int,__int64) *OpenDCL* ['editor_mfcsamps_AsdkAcUiSample', 'editor_mfcsamps_asdkFileNav']
public: __cdecl AcDbFullSubentPath::~AcDbFullSubentPath(void) ['entity_hilight', 'entity_AssocFillet']
public: virtual __cdecl AcGiTextStyle::~AcGiTextStyle(void) ['graphics_textstyl', 'graphics_stylcvrt']
public: enum Acad::ErrorStatus __cdecl AcDbLayerTableRecord::setLinetypeObjectId(class AcDbObjectId) ['database_entswerr', 'database_tablerec']
struct resbuf * __cdecl acutBuildList(int,...) *OpenDCL* ['database_xtsndict', 'database_xrecord']
int __cdecl acedGetFunCode(void) *OpenDCL* ['misc_fact', 'entity_AssocFillet']
int __cdecl acedTrans(double const * const,struct resbuf const *,struct resbuf const *,int,double * const) ['database_complex', 'database_elipsjig']
__declspec(dllimport) public: bool __cdecl AcGePoint3d::isEqualTo(class AcGePoint3d const &,class AcGeTol const &)const  ['database_elipsjig', 'entity_AssocFillet']
public: virtual __cdecl AcGiFaceData::~AcGiFaceData(void) ['graphics_mesh', 'graphics_shell']
public: enum Acad::ErrorStatus __cdecl AcDbObject::erase(bool) ['entity_referenc', 'entity_AssocFillet']
int __cdecl acedGetAngle(double const * const,wchar_t const *,double *) ['database_complex', 'editor_mfcsamps_AsdkAcUiSample']
public: __cdecl AcDbEllipse::AcDbEllipse(void) ['database_elipsjig', 'entity_referenc']
public: virtual int __cdecl CAdUiBaseDialog::Create(wchar_t const *,class CWnd *) *OpenDCL* ['editor_mfcsamps_AsdkAcUiSample', 'editor_mfcsamps_asdkFileNav']
public: enum Acad::ErrorStatus __cdecl AcDbDatabase::getSymbolTable(class AcDbTextStyleTable * &,enum AcDb::OpenMode) *OpenDCL* ['graphics_stylcvrt', 'database_clonreac']
protected: virtual void __cdecl CAdUiDialog::OnInitDialogFinish(void) ['editor_mfcsamps_AsdkAcUiSample', 'editor_mfcsamps_asdkFileNav']
public: enum Acad::ErrorStatus __cdecl AcDbXrecord::setFromRbChain(struct resbuf const &,class AcDbDatabase *) ['database_xtsndict', 'database_xrecord']
__declspec(dllimport) public: class AcGeVector3d __cdecl AcGeCircArc3d::refVec(void)const  ['entity_AssocFillet']
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::subGetClassID(struct _GUID *)const  ['entity_referenc']
public: virtual void __cdecl AcGiEdgeData::setVisibility(unsigned char const *) ['graphics_shell']
public: virtual bool __cdecl AcDbEllipse::isPeriodic(void)const  ['entity_referenc']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getOffsetCurves(double,class AcArray<void *,class AcArrayMemCopyReallocator<void *> > &)const  ['entity_referenc']
public: virtual __cdecl AcDbIdMappingIter::~AcDbIdMappingIter(void) ['database_deepclon']
__declspec(dllimport) public: void __cdecl AcGeCurveCurveInt3d::getIntParams(int,double &,double &)const  ['entity_AssocFillet']
public: virtual __cdecl AcCmColor::~AcCmColor(void) *OpenDCL* ['database_tablerec']
__declspec(dllimport) public: bool __cdecl AcGeInterval::isBoundedAbove(void)const  ['entity_AssocFillet']
protected: virtual void __cdecl CNavDialog::OnDoFind(void) ['editor_mfcsamps_asdkFileNav']
public: bool __cdecl AcDbAssocActionBody::hasAnyErasedOrBrokenDependencies(void)const  ['entity_AssocFillet']
__declspec(dllimport) public: bool __cdecl AcGeEntity3d::isEqualTo(class AcGeEntity3d const &,class AcGeTol const &)const  ['entity_AssocFillet']
public: virtual wchar_t const * __cdecl CAdUiBaseDialog::AppRootKey(void) ['editor_mfcsamps_asdkFileNav']
public: struct _ITEMIDLIST __unaligned * __cdecl CNavData::GetID(void) ['editor_mfcsamps_asdkFileNav']
protected: virtual enum ADUI_REPLY __cdecl CNavDialog::OnNotifyControlChange(unsigned int,__int64) ['editor_mfcsamps_asdkFileNav']
public: __cdecl AcDbBlockReference::AcDbBlockReference(void) *OpenDCL* ['database_complex']
__declspec(dllimport) public: class AcGeInterval & __cdecl AcGeInterval::setLower(double) ['entity_AssocFillet']
public: virtual enum Acad::ErrorStatus __cdecl AcDbAssocActionBody::collectPersSubentNamingDataOverride(class AcArray<unsigned int,class AcArrayMemCopyReallocator<unsigned int> > &,class AcArray<unsigned int,class AcArrayMemCopyReallocator<unsigned int> > &)const  ['entity_AssocFillet']
struct resbuf * __cdecl acedGetArgs(void) *OpenDCL* ['misc_fact']
public: static class AcRxClass * __cdecl AcDbGroup::desc(void) ['database_groups']
__declspec(dllimport) public: double __cdecl AcGeVector3d::angleTo(class AcGeVector3d const &)const  ['entity_AssocFillet']
__declspec(dllimport) public: int __cdecl AcEdInputPoint::history(void)const  ['reactors_inputpoint']
public: class AcDbFullSubentPath & __cdecl AcDbFullSubentPath::operator=(class AcDbFullSubentPath const &) ['entity_AssocFillet']
public: virtual __cdecl CAcUiAngleEdit::~CAcUiAngleEdit(void) *OpenDCL* ['editor_mfcsamps_AsdkAcUiSample']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getParamAtDist(double,double &)const  ['entity_referenc']
int __cdecl acedRetReal(double) *OpenDCL* ['misc_fact']
public: virtual int __cdecl CAcUiNavDialog::LaunchBrowserDialog(class ATL::CStringT<wchar_t,class StrTraitMFC_DLL<wchar_t,class ATL::ChTraitsCRT<wchar_t> > > &,wchar_t const *,wchar_t const *,wchar_t const *) ['editor_mfcsamps_asdkFileNav']
public: enum Acad::ErrorStatus __cdecl AcDbLinetypeTable::newIterator(class AcDbLinetypeTableIterator * &,bool,bool)const  ['database_tbliter']
public: void __cdecl CNavDialog::SetMultiSelectAllowed(int) ['editor_mfcsamps_asdkFileNav']
public: enum Acad::ErrorStatus __cdecl AcDbText::setPosition(class AcGePoint3d const &) *OpenDCL* ['database_complex']
__declspec(dllimport) public: void __cdecl AcGeInterval::`default constructor closure'(void) ['entity_AssocFillet']
__declspec(dllimport) public: class AcGePoint3d __cdecl AcGeLineSeg3d::startPoint(void)const  ['entity_AssocFillet']
public: virtual __cdecl CAcUiNumericEdit::~CAcUiNumericEdit(void) ['editor_mfcsamps_AsdkAcUiSample']
__declspec(dllimport) public: class AcArray<class AcGeCurve3d *,class AcArrayMemCopyReallocator<class AcGeCurve3d *> > const & __cdecl AcEdInputPoint::alignmentPaths(void)const  ['reactors_inputpoint']
protected: virtual int __cdecl CNavDialog::OnCmdMsg(unsigned int,int,void *,struct AFX_CMDHANDLERINFO *) ['editor_mfcsamps_asdkFileNav']
public: virtual void __cdecl AcApProfileManagerReactor::currentProfileWillBeSaved(wchar_t const *) ['reactors_AsdkProfileSample']
public: virtual __cdecl AcDbEdgeRef::~AcDbEdgeRef(void) ['entity_AssocFillet']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getFirstDeriv(double,class AcGeVector3d &)const  ['entity_referenc']
int __cdecl acdbDisToF(wchar_t const *,int,double *) *OpenDCL* ['editor_mfcsamps_AsdkAcUiSample']
public: virtual void __cdecl AcDbIdMappingIter::start(void) ['database_deepclon']
__declspec(dllimport) public: void __cdecl AcGeCompositeCurve3d::getCurveList(class AcArray<void *,class AcArrayMemCopyReallocator<void *> > &)const  ['entity_AssocFillet']
public: enum Acad::ErrorStatus __cdecl AcDbEvalVariant::getValue(double &)const  ['entity_AssocFillet']
__declspec(dllimport) public: class AcString & __cdecl AcString::assign(class AcString const &) ['entity_AssocFillet']
public: virtual void __cdecl AcDbAssocActionBody::auditAssociativeDataOverride(enum AcDbAssocStatus &) ['entity_AssocFillet']
protected: virtual void __cdecl CAcUiNavDialog::OnFilterChange(void) ['editor_mfcsamps_asdkFileNav']
__declspec(dllimport) public: void __cdecl AcGeLinearEnt3d::getLine(class AcGeLine3d &)const  ['entity_AssocFillet']
public: __cdecl CNavFilterArray::CNavFilterArray(void) ['editor_mfcsamps_asdkFileNav']
public: enum Acad::ErrorStatus __cdecl AcDbRegAppTable::newIterator(class AcDbRegAppTableIterator * &,bool,bool)const  ['editor_mfcsamps_AsdkAcUiSample']
void * __cdecl acrxRegisterService(wchar_t const *) ['entity_tempapp']
public: class AcGePoint3d __cdecl AcDbLine::startPoint(void)const  ['reactors_persreac']
public: enum Acad::ErrorStatus __cdecl AcDbAttributeDefinition::setFieldLength(unsigned short) ['database_complex']
__declspec(dllimport) public: class AcGeVector3d __cdecl AcGeEllipArc3d::minorAxis(void)const  ['entity_AssocFillet']
__declspec(dllimport) public: class AcGePoint3d __cdecl AcGeCurveCurveInt3d::intPoint(int)const  ['entity_AssocFillet']
int __cdecl acedUndef(wchar_t const *,int) *OpenDCL* ['entity_AssocFillet']
__declspec(dllimport) public: class AcGePoint3d __cdecl AcGePointOnCurve3d::point(void)const  ['entity_AssocFillet']
public: enum AcEdJig::DragStatus __cdecl AcEdJig::acquirePoint(class AcGePoint3d &,class AcGePoint3d const &) ['database_elipsjig']
public: virtual bool __cdecl AcDbIdMappingIter::next(void) ['database_deepclon']
__declspec(dllimport) public: wchar_t const * __cdecl AcEdInputPoint::tooltipString(void)const  ['reactors_inputpoint']
public: class AcDbObjectId __cdecl AcDbCompoundObjectId::leafId(void)const  ['entity_AssocFillet']
public: virtual void __cdecl AcApDocManagerReactor::documentToBeActivated(class AcApDocument *) *OpenDCL* ['editor_mfcsamps_modeless']
protected: virtual int __cdecl CAdUiBaseDialog::FindContextHelpFullPath(wchar_t const *,class ATL::CStringT<wchar_t,class StrTraitMFC_DLL<wchar_t,class ATL::ChTraitsCRT<wchar_t> > > &) *OpenDCL* ['editor_mfcsamps_asdkFileNav']
__declspec(dllimport) public: bool __cdecl AcGeCurve3d::isPeriodic(double &)const  ['entity_AssocFillet']
public: virtual void __cdecl AcGiTextStyle::setBigFontFileName(wchar_t const *) ['graphics_textstyl']
public: __cdecl AcDbAttributeDefinition::AcDbAttributeDefinition(void) ['database_complex']
public: enum Acad::ErrorStatus __cdecl AcDbAttributeDefinition::setTag(wchar_t const *) ['database_complex']
public: __cdecl CAcUiSymbolComboBox::CAcUiSymbolComboBox(void) *OpenDCL* ['editor_mfcsamps_AsdkAcUiSample']
public: int __cdecl CAdUiDialog::GetDialogData(wchar_t const *,class ATL::CStringT<wchar_t,class StrTraitMFC_DLL<wchar_t,class ATL::ChTraitsCRT<wchar_t> > > &) ['editor_mfcsamps_AsdkAcUiSample']
__declspec(dllimport) public: class AcGePoint3d const & __cdecl AcEdInputPoint::rawPoint(void)const  ['reactors_inputpoint']
public: void __cdecl CAdUiBaseDialog::SetAppRootKey(wchar_t const *) ['editor_mfcsamps_asdkFileNav']
public: enum Acad::ErrorStatus __cdecl AcDbAssocDependency::detachFromObject(void) ['entity_AssocFillet']
public: __cdecl AcDbAttribute::AcDbAttribute(void) *OpenDCL* ['database_complex']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getProjectedCurve(class AcGePlane const &,class AcGeVector3d const &,class AcDbCurve * &)const  ['entity_referenc']
__declspec(dllimport) public: class AcGeVector3d __cdecl AcGeLinearEnt3d::direction(void)const  ['entity_AssocFillet']
__declspec(dllimport) public: class AcArray<class AcDbCustomOsnapMode *,class AcArrayMemCopyReallocator<class AcDbCustomOsnapMode *> > const & __cdecl AcEdInputPoint::customOsnapModes(void)const  ['reactors_inputpoint']
public: enum Acad::ErrorStatus __cdecl AcDbAttribute::setInvisible(bool) *OpenDCL* ['database_complex']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::reverseCurve(void) ['entity_referenc']
__declspec(dllimport) public: void __cdecl AcGeCurveCurveInt3d::getIntConfigs(int,enum AcGe::AcGeXConfig &,enum AcGe::AcGeXConfig &)const  ['entity_AssocFillet']
public: enum Acad::ErrorStatus __cdecl AcDbText::setHeight(double) *OpenDCL* ['database_complex']
public: enum AcEdJig::DragStatus __cdecl AcEdJig::drag(void) ['database_elipsjig']
public: class AcDbAssocEvaluationCallback * __cdecl AcDbAssocActionBody::currentEvaluationCallback(void)const  ['entity_AssocFillet']
public: virtual void __cdecl AcGiFaceData::setVisibility(unsigned char const *) ['graphics_mesh']
public: virtual int __cdecl CAcUiDialog::IsMultiDocumentActivationEnabled(void) ['editor_mfcsamps_AsdkAcUiSample']
public: class AcDbObjectId __cdecl AcDbAssocActionBody::paramAtName(class AcString const &,int)const  ['entity_AssocFillet']
protected: virtual void __cdecl CNavDialog::OnFolderChange(void) ['editor_mfcsamps_asdkFileNav']
public: int __cdecl CAcUiEdit::Validate(void) ['editor_mfcsamps_AsdkAcUiSample']
public: __cdecl AcDbCircle::AcDbCircle(void) ['database_complex']
public: enum Acad::ErrorStatus __cdecl AcDbEvalVariant::getValue(int &)const  ['entity_AssocFillet']
public: void __cdecl AcDbLayerTableRecord::setColor(class AcCmColor const &) ['database_tablerec']
__declspec(dllimport) public: bool __cdecl AcGeCurve3d::isClosed(class AcGeTol const &)const  ['entity_AssocFillet']
__declspec(dllimport) public: class AcGePoint3d __cdecl AcGeEllipArc3d::center(void)const  ['entity_AssocFillet']
protected: virtual int __cdecl CNavDialog::OnUrlOK(void) ['editor_mfcsamps_asdkFileNav']
protected: virtual void __cdecl CNavDialog::Refresh(void) ['editor_mfcsamps_asdkFileNav']
public: virtual enum Acad::ErrorStatus __cdecl AcDbAssocActionBody::notificationOverride(class AcDbAssocNotificationData *) ['entity_AssocFillet']
protected: virtual void __cdecl CNavDialog::OnDoAddToFavorites(int) ['editor_mfcsamps_asdkFileNav']
public: virtual int __cdecl CAcUiNavDialog::OnInitDialog(void) ['editor_mfcsamps_asdkFileNav']
public: enum Acad::ErrorStatus __cdecl AcDbAssocActionBody::addParam(class AcString const &,class AcRxClass *,class AcDbObjectId &,int &)const  ['entity_AssocFillet']
public: static enum Acad::ErrorStatus __cdecl AcDbAssocAction::getActionsDependentOnObject(class AcDbObject const *,bool,bool,class AcArray<class AcDbObjectId,class AcArrayMemCopyReallocator<class AcDbObjectId> > &) ['entity_AssocFillet']
__declspec(dllimport) public: void __cdecl AcGeCurve3d::getInterval(class AcGeInterval &)const  ['entity_AssocFillet']
protected: static struct AFX_MSGMAP const * __cdecl CAcUiDialog::GetThisMessageMap(void) ['editor_mfcsamps_AsdkAcUiSample']
public: virtual void __cdecl AcApProfileManagerReactor::currentProfileReset(wchar_t const *) ['reactors_AsdkProfileSample']
public: virtual void __cdecl AcGiTextStyle::setObliquingAngle(double) ['graphics_textstyl']
public: enum Acad::ErrorStatus __cdecl AcDbText::setTextString(wchar_t const *) *OpenDCL* ['database_complex']
__declspec(dllimport) public: class AcGeVector3d __cdecl AcGeCircArc3d::normal(void)const  ['entity_AssocFillet']
public: enum Acad::ErrorStatus __cdecl AcDbTextStyleTableRecord::fileName(wchar_t const * &)const  ['graphics_stylcvrt']
__declspec(dllimport) public: __cdecl AcGePointOnCurve3d::AcGePointOnCurve3d(void) ['entity_AssocFillet']
__declspec(dllimport) public: class AcString __cdecl AcString::concat(wchar_t const *)const  ['entity_AssocFillet']
public: __cdecl AcDbFullSubentPath::AcDbFullSubentPath(class AcDbObjectId,class AcDbSubentId) ['entity_AssocFillet']
class AcApProfileManager * __cdecl acProfileManagerPtr(void) ['reactors_AsdkProfileSample']
__declspec(dllimport) public: __cdecl AcGeCurveCurveInt3d::AcGeCurveCurveInt3d(void) ['entity_AssocFillet']
public: virtual enum Acad::ErrorStatus __cdecl AcEdInputPointMonitor::monitorInputPoint(class AcEdInputPoint const &,class AcEdInputPointMonitorResult &) ['reactors_inputpoint']
protected: virtual void __cdecl CAcUiNavDialog::OnFolderItemChange(void) ['editor_mfcsamps_asdkFileNav']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::setFromAcGeCurve(class AcGeCurve3d const &,class AcGeVector3d *,class AcGeTol const &) ['entity_referenc']
public: bool __cdecl AcDbAttributeDefinition::isInvisible(void)const  *OpenDCL* ['database_complex']
__declspec(dllimport) public: class AcGePoint3d __cdecl AcGeLineSeg3d::endPoint(void)const  ['entity_AssocFillet']
public: enum Acad::ErrorStatus __cdecl AcDbAttributeDefinition::setPreset(bool) ['database_complex']
__declspec(dllimport) class AcGeVector3d __cdecl operator*(double,class AcGeVector3d const &) ['reactors_persreac']
__declspec(dllimport) public: class AcString __cdecl AcString::concat(class AcString const &)const  ['entity_AssocFillet']
__declspec(dllimport) public: class AcArray<class AcArray<class AcDbObjectId,class AcArrayMemCopyReallocator<class AcDbObjectId> >,class AcArrayObjectCopyReallocator<class AcArray<class AcDbObjectId,class AcArrayMemCopyReallocator<class AcDbObjectId> > > > const & __cdecl AcEdInputPoint::nestedPickedEntities(void)const  ['reactors_inputpoint']
public: class AcDbObjectId __cdecl AcDbEntity::blockId(void)const  ['entity_AssocFillet']
public: virtual class AcRxClass * __cdecl AcEdJig::isA(void)const  ['database_elipsjig']
public: virtual __cdecl CNavDataArray::~CNavDataArray(void) ['editor_mfcsamps_asdkFileNav']
protected: virtual void __cdecl CAcUiDialog::OnOK(void) ['editor_mfcsamps_AsdkAcUiSample']
public: virtual __cdecl AcDbEvalVariant::~AcDbEvalVariant(void) ['entity_AssocFillet']
public: static class AcRxClass * __cdecl AcDbRegion::desc(void) ['entity_tempapp']
public: static class AcRxClass * __cdecl AcDbAssocEdgeActionParam::desc(void) ['entity_AssocFillet']
int __cdecl acedSSSubentLength(__int64 const * const,int,int *) ['entity_AssocFillet']
public: __cdecl AcDbArc::AcDbArc(void) ['entity_AssocFillet']
public: enum Acad::ErrorStatus __cdecl AcDbDatabase::addAcDbObject(class AcDbObjectId &,class AcDbObject *) ['database_ownrshp']
public: class AcDbObjectId __cdecl AcDbAssocAction::actionBody(void)const  ['entity_AssocFillet']
protected: virtual void __cdecl CNavDialog::UpdateUIState(void) ['editor_mfcsamps_asdkFileNav']
public: enum Acad::ErrorStatus __cdecl AcDbSymbolTableRecord::getName(class AcString &)const  ['reactors_ProtocolReactors']
public: class AcDbObjectId __cdecl AcDbDatabase::namedObjectsDictionaryId(void)const  ['editor_custobj']
__declspec(dllimport) public: class AcGePoint3d __cdecl AcGeCircArc3d::center(void)const  ['entity_AssocFillet']
public: __cdecl AcDbEdgeRef::AcDbEdgeRef(void) ['entity_AssocFillet']
protected: virtual void __cdecl CAcUiNavDialog::OnOK(void) ['editor_mfcsamps_asdkFileNav']
class AcDbFullSubentPath const kNullSubent ['entity_hilight']
void __cdecl InitAcUiDLL(void) *OpenDCL* ['editor_mfcsamps_asdkFileNav']
public: double __cdecl AcDbTextStyleTableRecord::xScale(void)const  ['graphics_stylcvrt']
__declspec(dllimport) public: class AcString __cdecl AcString::precat(wchar_t const *)const  ['entity_AssocFillet']
public: virtual bool __cdecl AcDbIdMappingIter::done(void) ['database_deepclon']
__declspec(dllimport) public: __cdecl AcGeCircArc3d::AcGeCircArc3d(class AcGePoint3d const &,class AcGeVector3d const &,double) ['entity_AssocFillet']
public: virtual enum Acad::ErrorStatus __cdecl AcEdInputPointFilter::processInputPoint(class AcEdInputPoint const &,class AcEdInputPointFilterResult &) ['reactors_inputpoint']
__declspec(dllimport) public: __cdecl AcGePoint3d::AcGePoint3d(class AcGePoint3d const &) *OpenDCL* ['entity_AssocFillet']
public: static bool __cdecl AcDbAssocManager::evaluateTopLevelNetwork(class AcDbDatabase *,class AcDbAssocEvaluationCallback *,int) ['entity_AssocFillet']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getAcGeCurve(class AcGeCurve3d * &,class AcGeTol const &)const  ['entity_referenc']
__declspec(dllimport) public: int __cdecl AcGeCurveCurveInt3d::numIntPoints(void)const  ['entity_AssocFillet']
public: double __cdecl AcDbText::height(void)const  *OpenDCL* ['database_complex']
public: enum Acad::ErrorStatus __cdecl AcDbText::setHorizontalMode(enum AcDb::TextHorzMode) *OpenDCL* ['database_complex']
public: enum AcEdJig::DragStatus __cdecl AcEdJig::acquireDist(double &,class AcGePoint3d const &) ['database_elipsjig']
public: enum Acad::ErrorStatus __cdecl AcDbBlockTableRecord::setOrigin(class AcGePoint3d const &) ['database_complex']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getEndPoint(class AcGePoint3d &)const  ['entity_referenc']
protected: virtual enum OkHandlerErr __cdecl CNavDialog::CombineDataTextWithFolderName(class CNavData *,class ATL::CStringT<wchar_t,class StrTraitMFC_DLL<wchar_t,class ATL::ChTraitsCRT<wchar_t> > > &) ['editor_mfcsamps_asdkFileNav']
__declspec(dllimport) public: void __cdecl AcEdInputPointFilterResult::setNewPoint(class AcGePoint3d const &) ['reactors_inputpoint']
class AcApLongTransactionManager * __cdecl acapLongTransactionManagerPtr(void) ['database_AsdkLongTransSample']
public: __cdecl AcDb2dPolyline::AcDb2dPolyline(enum AcDb::Poly2dType,class AcArray<class AcGePoint3d,class AcArrayMemCopyReallocator<class AcGePoint3d> > &,double,bool,double,double,class AcArray<double,class AcArrayMemCopyReallocator<double> > *,class AcArray<int,class AcArrayMemCopyReallocator<int> > *) ['database_complex']
__declspec(dllimport) public: double __cdecl AcGePoint3d::distanceTo(class AcGePoint3d const &)const  ['entity_AssocFillet']
public: class AcGeVector3d __cdecl AcDbDatabase::ucsxdir(void)const  ['database_elipsjig']
public: int __cdecl CAdUiOwnerDrawButton::AutoLoad(void) ['editor_mfcsamps_AsdkAcUiSample']
public: enum Acad::ErrorStatus __cdecl AcDbTextStyleTableRecord::bigFontFileName(wchar_t const * &)const  ['graphics_stylcvrt']
public: enum Acad::ErrorStatus __cdecl AcDbEntity::setPropertiesFrom(class AcDbEntity const *,bool) *OpenDCL* ['database_complex']
public: class AcDbObjectIterator * __cdecl AcDb2dPolyline::vertexIterator(void)const  ['database_pliniter']
public: __cdecl AcDbEdgeRef::AcDbEdgeRef(class AcDbFullSubentPath const &) ['entity_AssocFillet']
public: __cdecl CAcUiAngleEdit::CAcUiAngleEdit(void) *OpenDCL* ['editor_mfcsamps_AsdkAcUiSample']
public: virtual class AcRxClass * __cdecl AcEdInputPointMonitor::isA(void)const  ['reactors_inputpoint']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getParamAtPoint(class AcGePoint3d const &,double &)const  ['entity_referenc']
public: bool __cdecl AcDbObjectIterator::done(void)const  ['database_pliniter']
protected: virtual void __cdecl CAcUiDialog::OnCancel(void) ['editor_mfcsamps_AsdkAcUiSample']
__declspec(dllimport) public: __cdecl AcGeInterval::~AcGeInterval(void) ['entity_AssocFillet']
public: virtual int __cdecl CNavDialog::SetAllDialogsData(class ATL::CStringT<wchar_t,class StrTraitMFC_DLL<wchar_t,class ATL::ChTraitsCRT<wchar_t> > > const &,unsigned long) ['editor_mfcsamps_asdkFileNav']
__declspec(dllimport) public: __cdecl AcGeTol::AcGeTol(void) ['entity_AssocFillet']
public: virtual class AcGePoint2d __cdecl AcGiTextStyle::extents(wchar_t const *,bool,int,bool,class AcGiWorldDraw *)const  ['graphics_textstyl']
public: virtual enum Acad::ErrorStatus __cdecl AcEdJig::setDimValue(class AcDbDimData const *,double) ['database_elipsjig']
__declspec(dllimport) public: class AcArray<class AcArray<class AcDbObjectId,class AcArrayMemCopyReallocator<class AcDbObjectId> >,class AcArrayObjectCopyReallocator<class AcArray<class AcDbObjectId,class AcArrayMemCopyReallocator<class AcDbObjectId> > > > const & __cdecl AcEdInputPoint::nestedKeyPointEntities(void)const  ['reactors_inputpoint']
public: virtual void __cdecl AcApProfileManagerReactor::profileSaved(wchar_t const *) ['reactors_AsdkProfileSample']
public: virtual wchar_t const * __cdecl CAcUiDialog::AppRootKey(void) ['editor_mfcsamps_AsdkAcUiSample']
public: double __cdecl AcDbText::rotation(void)const  *OpenDCL* ['database_complex']
__declspec(dllimport) public: class AcGeMatrix3d & __cdecl AcGeMatrix3d::setCoordSystem(class AcGePoint3d const &,class AcGeVector3d const &,class AcGeVector3d const &,class AcGeVector3d const &) ['graphics_textstyl']
public: virtual void __cdecl AcApProfileManagerReactor::profileWillReset(wchar_t const *) ['reactors_AsdkProfileSample']
__declspec(dllimport) public: double __cdecl AcGeMatrix3d::det(void)const  ['entity_AssocFillet']
__declspec(dllimport) public: class AcRxClass * __cdecl AcRxClass::myParent(void)const  *OpenDCL* ['entity_AssocFillet']
public: class AcDbDatabase * __cdecl AcDbObjectId::database(void)const  *OpenDCL* ['entity_AssocFillet']
public: __cdecl AcAxDocLock::~AcAxDocLock(void) ['editor_mfcsamps_modeless']
protected: virtual int __cdecl CNavDialog::VerifyURLSave(void) ['editor_mfcsamps_asdkFileNav']
public: virtual void __cdecl CAcUiDialog::EnableFloatingWindows(int) ['editor_mfcsamps_AsdkAcUiSample']
public: virtual struct HINSTANCE__ * __cdecl CAcUiDialog::AppResourceInstance(void) ['editor_mfcsamps_AsdkAcUiSample']
public: void __cdecl AcDbAuditInfo::errorsFixed(int) ['entity_AssocFillet']
public: static class AcRxClass * __cdecl AcDbRegAppTableRecord::desc(void) ['editor_mfcsamps_AsdkAcUiSample']
public: virtual void __cdecl CAcUiNavDialog::OnDoLocate(void) ['editor_mfcsamps_asdkFileNav']
__declspec(dllimport) public: class AcString & __cdecl AcString::format(wchar_t const *,...) ['entity_AssocFillet']
__declspec(dllimport) public: double __cdecl AcGeInterval::lowerBound(void)const  ['entity_AssocFillet']
__declspec(dllimport) public: class AcGeMatrix3d & __cdecl AcGeMatrix3d::setToScaling(double,class AcGePoint3d const &) ['entity_referenc']
public: enum Acad::ErrorStatus __cdecl AcDbDatabase::getBlockTable(class AcDbSymbolTable * &,enum AcDb::OpenMode) ['reactors_ProtocolReactors']
public: virtual bool __cdecl AcDbEllipse::isClosed(void)const  ['entity_referenc']
__declspec(dllimport) public: enum AcDb::OsnapMask const __cdecl AcEdInputPoint::osnapMask(void)const  ['reactors_inputpoint']
__declspec(dllimport) public: class AcGePoint3d __cdecl AcGePointOnCurve3d::point(class AcGeCurve3d const &,double) ['entity_AssocFillet']
__declspec(dllimport) public: bool __cdecl AcGeCurve3d::setInterval(class AcGeInterval const &) ['entity_AssocFillet']
public: virtual void __cdecl CNavDialog::LocateFile(void) ['editor_mfcsamps_asdkFileNav']
public: static class AcRxClass * __cdecl AcDbLongTransaction::desc(void) ['database_AsdkLongTransSample']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getDistAtPoint(class AcGePoint3d const &,double &)const  ['entity_referenc']
__declspec(dllimport) public: void __cdecl AcEdInputPointFilterResult::setNewTooltipString(wchar_t const *) ['reactors_inputpoint']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getSecondDeriv(class AcGePoint3d const &,class AcGeVector3d &)const  ['entity_referenc']
protected: virtual void __cdecl CAcUiNavDialog::OnCancel(void) ['editor_mfcsamps_asdkFileNav']
__declspec(dllimport) public: class AcRxObject * __cdecl AcRxObject::x(class AcRxClass const *)const  ['entity_tempapp']
int __cdecl acedSSSubentName(__int64 const * const,int,int,class AcDbFullSubentPath &) ['entity_AssocFillet']
__declspec(dllimport) public: bool __cdecl AcGeVector3d::isParallelTo(class AcGeVector3d const &,class AcGeTol const &)const  ['entity_AssocFillet']
public: virtual int __cdecl CNavDialog::GetAllDialogsData(class ATL::CStringT<wchar_t,class StrTraitMFC_DLL<wchar_t,class ATL::ChTraitsCRT<wchar_t> > > const &,class ATL::CStringT<wchar_t,class StrTraitMFC_DLL<wchar_t,class ATL::ChTraitsCRT<wchar_t> > > &) ['editor_mfcsamps_asdkFileNav']
public: virtual bool __cdecl AcDbIdMappingIter::getMap(class AcDbIdPair &) ['database_deepclon']
protected: virtual int __cdecl CAcUiNavDialog::OnFileNameOK(void) ['editor_mfcsamps_asdkFileNav']
public: enum Acad::ErrorStatus __cdecl AcDbAssocActionBody::setStatus(enum AcDbAssocStatus,bool,bool)const  ['entity_AssocFillet']
public: wchar_t const * __cdecl AcDbAttributeDefinition::tagConst(void)const  ['database_complex']
public: static class AcRxClass * __cdecl AcDbAssocAction::desc(void) ['entity_AssocFillet']
public: __cdecl CAdUiListBox::CAdUiListBox(void) ['editor_mfcsamps_AsdkAcUiSample']
public: virtual enum Acad::ErrorStatus __cdecl AcDbCurve::getOffsetCurvesGivenPlaneNormal(class AcGeVector3d const &,double,class AcArray<void *,class AcArrayMemCopyReallocator<void *> > &)const  ['entity_referenc']
public: virtual void __cdecl CAcUiNavDialog::EnableFloatingWindows(int) ['editor_mfcsamps_asdkFileNav']
protected: static struct AFX_MSGMAP const * __cdecl CAcUiNavDialog::GetThisMessageMap(void) ['editor_mfcsamps_asdkFileNav']
int __cdecl acedRegFunc(int (__cdecl*)(void),int) *OpenDCL* ['entity_AssocFillet']
public: void __cdecl AcDbAssocDependency::setIsWriteDependency(bool) ['entity_AssocFillet']
protected: virtual void __cdecl CNavDialog::OnFileNameSelectionChange(void) ['editor_mfcsamps_asdkFileNav']
public: virtual __cdecl CNavFilterArray::~CNavFilterArray(void) ['editor_mfcsamps_asdkFileNav']
__declspec(dllimport) public: __cdecl AcString::AcString(class AcString const &) ['entity_AssocFillet']
public: enum Acad::ErrorStatus __cdecl AcDbObject::downgradeOpen(void) ['database_clonenod']
int __cdecl acedGetInt(wchar_t const *,int *) ['database_AsdkLongTransSample']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getFirstDeriv(class AcGePoint3d const &,class AcGeVector3d &)const  ['entity_referenc']
public: virtual class CWnd * __cdecl CAcUiDialog::AppMainWindow(void) ['editor_mfcsamps_AsdkAcUiSample']
class AcDbAssocAction * __cdecl acdbAssocGetCurrentlyEvaluatedActionPointer(class AcDbDatabase const *) ['entity_AssocFillet']
public: class AcGePoint3d __cdecl AcDbEllipse::center(void)const  ['entity_referenc']
public: __cdecl AcDbCompoundObjectId::AcDbCompoundObjectId(class AcDbObjectId const &,class AcDbDatabase *) ['entity_AssocFillet']
public: virtual void __cdecl CAcUiNavDialog::OnDialogHelp(wchar_t const *) ['editor_mfcsamps_asdkFileNav']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getClosestPointTo(class AcGePoint3d const &,class AcGePoint3d &,bool)const  ['entity_referenc']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getStartPoint(class AcGePoint3d &)const  ['entity_referenc']
protected: virtual int __cdecl CNavDialog::UpdateFileExtension(class ATL::CStringT<wchar_t,class StrTraitMFC_DLL<wchar_t,class ATL::ChTraitsCRT<wchar_t> > > &,int) ['editor_mfcsamps_asdkFileNav']
__declspec(dllimport) public: class AcGeCurveCurveInt3d & __cdecl AcGeCurveCurveInt3d::set(class AcGeCurve3d const &,class AcGeCurve3d const &,class AcGeVector3d const &,class AcGeTol const &) ['entity_AssocFillet']
public: enum Acad::ErrorStatus __cdecl AcDbGroup::remove(class AcDbObjectId) ['database_groups']
__declspec(dllimport) public: bool __cdecl AcGeVector3d::isZeroLength(class AcGeTol const &)const  ['entity_AssocFillet']
void * __cdecl acad_malloc(unsigned __int64) ['database_AsdkLongTransSample']
__declspec(dllimport) public: void __cdecl AcEdInputPointMonitorResult::setAdditionalTooltipString(wchar_t const *) ['reactors_inputpoint']
__declspec(dllimport) public: __cdecl AcGePlane::AcGePlane(class AcGePoint3d const &,class AcGeVector3d const &) ['database_curve']
int __cdecl acedGetInput(wchar_t *,unsigned __int64) ['database_clonreac']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getPointAtParam(double,class AcGePoint3d &)const  ['entity_referenc']
public: enum Acad::ErrorStatus __cdecl AcDbText::setRotation(double) *OpenDCL* ['database_complex']
public: static class AcDbObjectId __cdecl AcDbAssocAction::actionBody(class AcDbObjectId const &) ['entity_AssocFillet']
__declspec(dllimport) public: void __cdecl AcGeCurve3d::getClosestPointTo(class AcGePoint3d const &,class AcGePointOnCurve3d &,class AcGeTol const &)const  ['entity_AssocFillet']
protected: void __cdecl CAdUiBaseDialog::BeginEditorCommand(void) ['editor_mfcsamps_AsdkAcUiSample']
public: int __cdecl CAdUiDialog::SetDialogData(wchar_t const *,wchar_t const *) ['editor_mfcsamps_AsdkAcUiSample']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getSplitCurves(class AcArray<double,class AcArrayMemCopyReallocator<double> > const &,class AcArray<void *,class AcArrayMemCopyReallocator<void *> > &)const  ['entity_referenc']
public: enum Acad::ErrorStatus __cdecl AcDbLayerTableRecord::setIsFrozen(bool) ['database_tablerec']
public: virtual int __cdecl AcGiTextStyle::loadStyleRec(class AcDbDatabase *)const  ['graphics_textstyl']
public: bool __cdecl AcDbAttributeDefinition::isConstant(void)const  *OpenDCL* ['database_complex']
public: __cdecl AcDbEvalVariant::AcDbEvalVariant(double) ['entity_AssocFillet']
public: virtual __cdecl CAcUiDialog::~CAcUiDialog(void) ['editor_mfcsamps_AsdkAcUiSample']
public: virtual void __cdecl AcApProfileManagerReactor::currentProfileWillBeReset(wchar_t const *) ['reactors_AsdkProfileSample']
public: static class AcRxClass * __cdecl AcDbBlockInsertionPoints::desc(void) ['reactors_ProtocolReactors']
public: virtual void __cdecl AcApProfileManagerReactor::profileReset(wchar_t const *) ['reactors_AsdkProfileSample']
__declspec(dllimport) public: class AcGePoint3d const & __cdecl AcEdInputPoint::computedPoint(void)const  ['reactors_inputpoint']
public: virtual void __cdecl AcApDocManagerReactor::documentCreated(class AcApDocument *) *OpenDCL* ['editor_mfcsamps_modeless']
enum Acad::ErrorStatus __cdecl accessAcDbObjectForRead(class AcDbObject * &,class AcDbObjectId,class AcRxClass * (__cdecl*)(void),bool &,bool) ['entity_AssocFillet']
public: void __cdecl CAcUiEdit::Convert(void) ['editor_mfcsamps_AsdkAcUiSample']
public: virtual __cdecl AcEdJig::~AcEdJig(void) ['database_elipsjig']
protected: virtual enum Acad::ErrorStatus __cdecl AcDbEntity::subTransformBy(class AcGeMatrix3d const &) ['entity_referenc']
__declspec(dllimport) public: enum AcDb::OsnapMask const __cdecl AcEdInputPoint::osnapOverrides(void)const  ['reactors_inputpoint']
public: virtual void __cdecl AcApProfileManagerReactor::currentProfileWillChange(wchar_t const *) ['reactors_AsdkProfileSample']
public: class AcDbObjectId __cdecl AcDbObjectIterator::objectId(void) ['database_pliniter']
__declspec(dllimport) public: enum AcGe::EntityId __cdecl AcGeEntity3d::type(void)const  ['entity_AssocFillet']
protected: virtual int __cdecl CNavDialog::ReportURLTransferStatus(class CDWordArray &,class CStringArray &,class CStringArray &) ['editor_mfcsamps_asdkFileNav']
__declspec(dllimport) public: class AcGeVector3d __cdecl AcGePlanarEnt::normal(void)const  ['entity_AssocFillet']
public: enum Acad::ErrorStatus __cdecl AcAxDocLock::lockStatus(void)const  ['editor_mfcsamps_modeless']
public: virtual int __cdecl CAcUiNavDialog::EnableMultiDocumentActivation(int) ['editor_mfcsamps_asdkFileNav']
__declspec(dllimport) public: bool __cdecl AcGeCurve3d::hasEndPoint(class AcGePoint3d &)const  ['entity_AssocFillet']
protected: virtual int __cdecl CAcUiNavDialog::GetOptionsState(void) ['editor_mfcsamps_asdkFileNav']
public: virtual int __cdecl CAcUiNavDialog::BeginDownloadFiles(class CStringArray &,class CDWordArray &) ['editor_mfcsamps_asdkFileNav']
public: static class AcRxClass * __cdecl AcDb2dPolyline::desc(void) ['database_pliniter']
public: enum Acad::ErrorStatus __cdecl AcDbLongTransaction::newWorkSetIterator(class AcDbLongTransWorkSetIterator * &,bool,bool)const  ['database_AsdkLongTransSample']
__declspec(dllimport) public: class AcArray<class AcDbObjectId,class AcArrayMemCopyReallocator<class AcDbObjectId> > const & __cdecl AcEdInputPoint::pickedEntities(void)const  ['reactors_inputpoint']
public: class AcDbAssocEvaluationCallback * __cdecl AcDbAssocAction::currentEvaluationCallback(void)const  ['entity_AssocFillet']
public: void __cdecl AcDbLayerTableRecord::setVPDFLT(bool) ['database_tablerec']
public: enum Acad::ErrorStatus __cdecl AcDbAssocActionBody::evaluateDependencies(void)const  ['entity_AssocFillet']
public: virtual class AcRxClass * __cdecl AcEdInputPointFilter::isA(void)const  ['reactors_inputpoint']
public: __cdecl AcDbEvalVariant::AcDbEvalVariant(int) ['entity_AssocFillet']
__declspec(dllimport) public: __cdecl AcGeInterval::AcGeInterval(double) ['entity_AssocFillet']
public: void __cdecl AcDbObjectIterator::step(bool,bool) ['database_pliniter']
public: virtual int __cdecl CNavDialog::GetAllDialogsData(class ATL::CStringT<wchar_t,class StrTraitMFC_DLL<wchar_t,class ATL::ChTraitsCRT<wchar_t> > > const &,unsigned long &) ['editor_mfcsamps_asdkFileNav']
class CMDIFrameWnd * __cdecl acedGetAcadFrame(void) *OpenDCL* ['editor_mfcsamps_modeless']
public: class AcDbObjectId __cdecl AcEdJig::append(void) ['database_elipsjig']
protected: virtual int __cdecl CAcUiDialog::FindContextHelpFullPath(wchar_t const *,class ATL::CStringT<wchar_t,class StrTraitMFC_DLL<wchar_t,class ATL::ChTraitsCRT<wchar_t> > > &) ['editor_mfcsamps_AsdkAcUiSample']
public: enum Acad::ErrorStatus __cdecl AcDbAttribute::setTag(wchar_t const *) *OpenDCL* ['database_complex']
protected: virtual void __cdecl CAcUiNavDialog::OnPlacesChanged(void) ['editor_mfcsamps_asdkFileNav']
__declspec(dllimport) public: double __cdecl AcGeEllipArc3d::majorRadius(void)const  ['entity_AssocFillet']
__declspec(dllimport) public: bool __cdecl AcGeInterval::isBoundedBelow(void)const  ['entity_AssocFillet']
public: enum Acad::ErrorStatus __cdecl AcDbEllipse::set(class AcGePoint3d const &,class AcGeVector3d const &,class AcGeVector3d const &,double,double,double) ['database_elipsjig']
public: enum Acad::ErrorStatus __cdecl AcDbAttribute::setFieldLength(unsigned short) *OpenDCL* ['database_complex']
__declspec(dllimport) public: __cdecl AcGeEllipArc3d::AcGeEllipArc3d(class AcGePoint3d const &,class AcGeVector3d const &,class AcGeVector3d const &,double,double) ['entity_AssocFillet']
__declspec(dllimport) public: class AcString & __cdecl AcString::assign(wchar_t const *) ['entity_AssocFillet']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getStartParam(double &)const  ['entity_referenc']
public: virtual __cdecl CAcUiNavDialog::~CAcUiNavDialog(void) ['editor_mfcsamps_asdkFileNav']
protected: virtual void __cdecl CAcUiNavDialog::OnFileNameChange(void) ['editor_mfcsamps_asdkFileNav']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getPlane(class AcGePlane &,enum AcDb::Planarity &)const  ['entity_referenc']
public: __cdecl AcDbEdgeRef::AcDbEdgeRef(class AcDbEdgeRef const &) ['entity_AssocFillet']
public: virtual void __cdecl AcGiTextStyle::setFileName(wchar_t const *) ['graphics_textstyl']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getPointAtDist(double,class AcGePoint3d &)const  ['entity_referenc']
__declspec(dllimport) public: bool __cdecl AcEdInputPoint::pointComputed(void)const  ['reactors_inputpoint']
__declspec(dllimport) public: bool __cdecl AcGeCurve3d::isDegenerate(enum AcGe::EntityId &,class AcGeTol const &)const  ['entity_AssocFillet']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getOrthoProjectedCurve(class AcGePlane const &,class AcDbCurve * &)const  ['entity_referenc']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getSplitCurves(class AcArray<class AcGePoint3d,class AcArrayMemCopyReallocator<class AcGePoint3d> > const &,class AcArray<void *,class AcArrayMemCopyReallocator<void *> > &)const  ['entity_referenc']
__declspec(dllimport) public: class AcGePoint3d const & __cdecl AcEdInputPointFilterResult::newPoint(void)const  ['reactors_inputpoint']
int __cdecl acedSSSubentNameX(struct resbuf * *,__int64 const * const,int,int,unsigned int) ['entity_AssocFillet']
__declspec(dllimport) public: __cdecl AcGeCurve3d::~AcGeCurve3d(void) ['entity_AssocFillet']
public: static class AcRxClass * __cdecl AcDbLinetypeTableRecord::desc(void) ['database_tbliter']
public: virtual int __cdecl CAcUiDialog::EnableMultiDocumentActivation(int) ['editor_mfcsamps_AsdkAcUiSample']
enum Acad::ErrorStatus __cdecl accessAcDbObjectForWrite(class AcDbObject *,bool &,bool &,int &,bool) ['entity_AssocFillet']
public: class AcDbEdgeRef & __cdecl AcDbEdgeRef::operator=(class AcDbEdgeRef const &) ['entity_AssocFillet']
public: static class AcRxClass * __cdecl AcDbArc::desc(void) ['entity_AssocFillet']
public: virtual void __cdecl CAcUiDialog::OnDialogHelp(void) ['editor_mfcsamps_AsdkAcUiSample']
public: __cdecl AcAxDocLock::AcAxDocLock(class AcDbObjectId const &,enum AcAxDocLock::DocLockType) ['editor_mfcsamps_modeless']
public: virtual void __cdecl AcGiTextStyle::setTrackingPercent(double) ['graphics_textstyl']
protected: virtual enum OkHandlerErr __cdecl CNavDialog::PreprocessData(class CNavDataArray &) ['editor_mfcsamps_asdkFileNav']
__declspec(dllimport) public: bool __cdecl AcGeEntity3d::isKindOf(enum AcGe::EntityId)const  ['entity_AssocFillet']
__declspec(dllimport) public: class AcGePoint3d __cdecl AcGeLinearEnt3d::pointOnLine(void)const  ['entity_AssocFillet']
public: virtual void __cdecl AcDbDatabaseReactor::objectAppended(class AcDbDatabase const *,class AcDbObject const *) *OpenDCL* ['editor_mfcsamps_modeless']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getDistAtParam(double,double &)const  ['entity_referenc']
public: __cdecl AcDbEllipse::AcDbEllipse(class AcGePoint3d const &,class AcGeVector3d const &,class AcGeVector3d const &,double,double,double) ['entity_referenc']
public: static class AcRxClass * __cdecl AcDbAttributeDefinition::desc(void) *OpenDCL* ['database_complex']
public: enum Acad::ErrorStatus __cdecl AcDbDatabase::deepCloneObjects(class AcArray<class AcDbObjectId,class AcArrayMemCopyReallocator<class AcDbObjectId> > const &,class AcDbObjectId const &,class AcDbIdMapping &,bool) ['database_deepclon']
public: virtual class AcArray<class AcDbDimData *,class AcArrayMemCopyReallocator<class AcDbDimData *> > * __cdecl AcEdJig::dimData(double) ['database_elipsjig']
public: enum Acad::ErrorStatus __cdecl AcDbBlockTable::newIterator(class AcDbBlockTableIterator * &,bool,bool)const  *OpenDCL* ['editor_mfcsamps_AsdkAcUiSample']
public: double __cdecl AcDbTextStyleTableRecord::textSize(void)const  ['graphics_stylcvrt']
__declspec(dllimport) public: __cdecl AcGeCircArc3d::AcGeCircArc3d(class AcGePoint3d const &,class AcGeVector3d const &,class AcGeVector3d const &,double,double,double) ['entity_AssocFillet']
__declspec(dllimport) public: class AcRxObject * __cdecl AcRxClass::delX(class AcRxClass *) ['entity_tempapp']
public: class AcDbObjectId __cdecl AcDbObject::extensionDictionary(void)const  ['database_xtsndict']
enum Acad::ErrorStatus __cdecl revertAcDbObjectFromWrite(class AcDbObject *,enum Acad::ErrorStatus,bool,bool,int) ['entity_AssocFillet']
public: virtual int __cdecl CNavDialog::SetAllDialogsData(class ATL::CStringT<wchar_t,class StrTraitMFC_DLL<wchar_t,class ATL::ChTraitsCRT<wchar_t> > > const &,class ATL::CStringT<wchar_t,class StrTraitMFC_DLL<wchar_t,class ATL::ChTraitsCRT<wchar_t> > > &) ['editor_mfcsamps_asdkFileNav']
public: void __cdecl AcEdJig::setDispPrompt(wchar_t const *,...) ['database_elipsjig']
__declspec(dllimport) public: class AcRxObject * __cdecl AcRxClass::addX(class AcRxClass *,class AcRxObject *) ['entity_tempapp']
__declspec(dllimport) public: __cdecl AcGePlane::AcGePlane(void) ['entity_AssocFillet']
__declspec(dllimport) public: class AcGeVector3d __cdecl AcGeEllipArc3d::majorAxis(void)const  ['entity_AssocFillet']
public: void __cdecl AcDbLayerTableRecord::setIsOff(bool) ['database_tablerec']
public: void __cdecl CNavDialog::SetToolsMenuItemsPresent(unsigned int) ['editor_mfcsamps_asdkFileNav']
void __cdecl acad_free(void *) ['database_AsdkLongTransSample']
public: class AcDbObjectId __cdecl AcDbAssocDependency::dependentOnObject(void)const  ['entity_AssocFillet']
public: virtual void __cdecl CAcUiNavDialog::DisplaySearchError(wchar_t const *) ['editor_mfcsamps_asdkFileNav']
public: virtual class AcRxClass * __cdecl AcDbBlockInsertionPoints::isA(void)const  ['reactors_ProtocolReactors']
public: class AcGePoint3d __cdecl AcDbLine::endPoint(void)const  ['reactors_persreac']
public: class AcDbHandle __cdecl AcDbObjectId::handle(void)const  ['editor_mfcsamps_modeless']
public: static struct CRuntimeClass * __cdecl CAcUiNavDialog::GetThisClass(void) ['editor_mfcsamps_asdkFileNav']
protected: virtual void __cdecl CNavDialog::DoDataExchange(class CDataExchange *) ['editor_mfcsamps_asdkFileNav']
public: enum Acad::ErrorStatus __cdecl AcDbAssocActionBody::setValueParam(class AcString const &,class AcDbEvalVariant const &,class AcString const &,class AcString const &,class AcString &,bool,int)const  ['entity_AssocFillet']
__declspec(dllimport) public: __cdecl AcGeCircArc3d::AcGeCircArc3d(void) ['entity_AssocFillet']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getClosestPointTo(class AcGePoint3d const &,class AcGeVector3d const &,class AcGePoint3d &,bool)const  ['entity_referenc']
public: __cdecl AcCmColor::AcCmColor(void) *OpenDCL* ['database_tablerec']
protected: virtual enum ADUI_REPLY __cdecl CAdUiBaseDialog::OnNotifyControlChange(unsigned int,__int64) *OpenDCL* ['editor_mfcsamps_AsdkAcUiSample']
public: enum Acad::ErrorStatus __cdecl AcDbCircle::setRadius(double) ['database_complex']
__declspec(dllimport) public: double __cdecl AcGeCircArc3d::radius(void)const  ['entity_AssocFillet']
__declspec(dllimport) public: __cdecl AcGeLine3d::AcGeLine3d(void) ['entity_AssocFillet']
public: static class AcRxClass * __cdecl AcDbAssocDependency::desc(void) ['entity_AssocFillet']
void __cdecl acdbFail(wchar_t const *) ['misc_fact']
public: __cdecl AcDbEvalVariant::AcDbEvalVariant(void) ['entity_AssocFillet']
public: enum Acad::ErrorStatus __cdecl AcDbText::setVerticalMode(enum AcDb::TextVertMode) *OpenDCL* ['database_complex']
__declspec(dllimport) public: double __cdecl AcGeInterval::upperBound(void)const  ['entity_AssocFillet']
public: bool __cdecl AcDbAuditInfo::fixErrors(void)const  ['entity_AssocFillet']
__declspec(dllimport) public: class AcGePoint3d const & __cdecl AcEdInputPoint::cartesianSnappedPoint(void)const  ['reactors_inputpoint']
public: virtual __cdecl AcDbCompoundObjectId::~AcDbCompoundObjectId(void) ['entity_AssocFillet']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getSpline(class AcDbSpline * &)const  ['entity_referenc']
public: enum Acad::ErrorStatus __cdecl AcDbAttributeDefinition::setPrompt(wchar_t const *) ['database_complex']
public: enum Acad::ErrorStatus __cdecl AcDbAssocActionBody::getValueParam(class AcString const &,class AcDbEvalVariant &,class AcString &,class AcString &,int)const  ['entity_AssocFillet']
__declspec(dllimport) class AcRxClass * __cdecl newAcRxClass(wchar_t const *,wchar_t const *,int,class AcRxObject * (__cdecl*)(void),wchar_t const *,wchar_t const *) ['entity_tempapp']
__declspec(dllimport) public: __cdecl AcString::AcString(wchar_t const *) ['entity_AssocFillet']
__declspec(dllimport) public: class AcGePoint3d const & __cdecl AcEdInputPoint::grippedPoint(void)const  ['reactors_inputpoint']
int __cdecl acedGetFileD(wchar_t const *,wchar_t const *,wchar_t const *,int,struct resbuf *) *OpenDCL* ['database_AsdkLongTransSample']
public: enum Acad::ErrorStatus __cdecl AcDbAssocDependency::attachToObject(class AcDbCompoundObjectId const &) ['entity_AssocFillet']
public: class AcDbObjectId __cdecl AcDbEntity::layerId(void)const  ['entity_AssocFillet']
protected: virtual void __cdecl CAcUiDialog::DoDataExchange(class CDataExchange *) ['editor_mfcsamps_AsdkAcUiSample']
public: __cdecl CAcUiNumericEdit::CAcUiNumericEdit(void) ['editor_mfcsamps_AsdkAcUiSample']
public: virtual __cdecl CAdUiListBox::~CAdUiListBox(void) ['editor_mfcsamps_AsdkAcUiSample']
public: static class AcRxClass * __cdecl AcDbEllipse::desc(void) ['database_curve']
protected: virtual enum ADUI_REPLY __cdecl CAdUiBaseDialog::OnNotifyGeneric(unsigned int,__int64) *OpenDCL* ['editor_mfcsamps_AsdkAcUiSample']
public: static class AcRxClass * __cdecl AcRxProtocolReactorManagerFactory::desc(void) ['reactors_ProtocolReactors']
__declspec(dllimport) public: void __cdecl AcEdInputPointFilterResult::setDisplayOsnapGlyph(bool) ['reactors_inputpoint']
protected: virtual enum ADUI_REPLY __cdecl CNavDialog::OnNotifyGeneric(unsigned int,__int64) ['editor_mfcsamps_asdkFileNav']
__declspec(dllimport) public: bool __cdecl AcGeCurve3d::hasStartPoint(class AcGePoint3d &)const  ['entity_AssocFillet']
__declspec(dllimport) public: class AcGeEntity3d * __cdecl AcGeEntity3d::copy(void)const  ['entity_AssocFillet']
public: void __cdecl AcDbLayerTableRecord::setIsLocked(bool) ['database_tablerec']
public: virtual enum Acad::ErrorStatus __cdecl AcDbAssocActionBody::clonePersSubentNamingDataOverride(class AcDbAssocPersSubentManagerCloner *) ['entity_AssocFillet']
public: virtual __cdecl CAcUiPickButton::~CAcUiPickButton(void) ['editor_mfcsamps_AsdkAcUiSample']
public: wchar_t const * __cdecl CNavData::GetText(void) ['editor_mfcsamps_asdkFileNav']
__declspec(dllimport) public: class AcGiViewportDraw * __cdecl AcEdInputPoint::drawContext(void)const  ['reactors_inputpoint']
public: class AcGePoint3d __cdecl AcDb2dVertex::position(void)const  ['database_pliniter']
public: virtual void __cdecl CAcUiNavDialog::OnDialogHelp(void) ['editor_mfcsamps_asdkFileNav']
public: enum AcDbAuditInfo::AuditPass __cdecl AcDbAuditInfo::auditPass(void)const  ['entity_AssocFillet']
__declspec(dllimport) public: class AcString & __cdecl AcString::append(class AcString const &) ['entity_AssocFillet']
public: virtual unsigned long __cdecl CAcUiNavDialog::GetDownloadActionCodes(class ATL::CStringT<wchar_t,class StrTraitMFC_DLL<wchar_t,class ATL::ChTraitsCRT<wchar_t> > > &) ['editor_mfcsamps_asdkFileNav']
__declspec(dllimport) public: class AcArray<class AcDbCustomOsnapMode *,class AcArrayMemCopyReallocator<class AcDbCustomOsnapMode *> > const & __cdecl AcEdInputPoint::customOsnapOverrides(void)const  ['reactors_inputpoint']
public: virtual enum Acad::ErrorStatus __cdecl AcCmColor::setColorIndex(unsigned short) ['database_tablerec']
public: virtual void __cdecl AcApProfileManagerReactor::profileWillBeSaved(wchar_t const *) ['reactors_AsdkProfileSample']
public: virtual __cdecl AcDbEllipse::~AcDbEllipse(void) ['entity_referenc']
public: enum Acad::ErrorStatus __cdecl AcDbDatabase::getSymbolTable(class AcDbRegAppTable * &,enum AcDb::OpenMode) ['editor_mfcsamps_AsdkAcUiSample']
public: class AcDbObjectId __cdecl AcDbCompoundObjectId::topId(void)const  ['entity_AssocFillet']
__declspec(dllimport) public: __cdecl AcGeCircArc3d::AcGeCircArc3d(class AcGeCircArc3d const &) ['entity_AssocFillet']
public: virtual class AcDbCompoundObjectId const & __cdecl AcDbSubentRef::entity(void)const  ['entity_AssocFillet']
public: bool __cdecl AcDbDatabase::tilemode(void)const  ['database_complex']
public: __cdecl AcDbAssocActionBody::AcDbAssocActionBody(enum AcDbAssocCreateImpObject) ['entity_AssocFillet']
public: static enum Acad::ErrorStatus __cdecl AcDbAssocActionBody::createActionAndActionBodyAndPostToDatabase(class AcRxClass *,class AcDbObjectId const &,class AcDbObjectId &,class AcDbObjectId &) ['entity_AssocFillet']
__declspec(dllimport) public: class AcGeVector3d __cdecl AcGePointOnCurve3d::deriv(int)const  ['entity_AssocFillet']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getArea(double &)const  ['entity_referenc']
__declspec(dllimport) public: bool __cdecl AcString::isEmpty(void)const  ['entity_AssocFillet']
__declspec(dllimport) void __cdecl acutAssertMessage(wchar_t const *,wchar_t const *,int,wchar_t const *) ['entity_AssocFillet']
__declspec(dllimport) public: class AcGePoint3d const & __cdecl AcEdInputPoint::lastPoint(void)const  ['reactors_inputpoint']
__declspec(dllimport) public: class AcString & __cdecl AcString::append(wchar_t const *) ['entity_AssocFillet']
public: enum Acad::ErrorStatus __cdecl AcDbAssocActionBody::addDependency(class AcRxClass *,class AcRxClass *,bool,bool,int,class AcDbObjectId &)const  ['entity_AssocFillet']
__declspec(dllimport) public: class AcGeLineSeg3d & __cdecl AcGeLineSeg3d::set(class AcGePoint3d const &,class AcGePoint3d const &) ['entity_AssocFillet']
public: __cdecl AcEdJig::AcEdJig(void) ['database_elipsjig']
public: void __cdecl CNavFilter::SetDescription(wchar_t const *) ['editor_mfcsamps_asdkFileNav']
public: __cdecl AcDbIdMappingIter::AcDbIdMappingIter(class AcDbIdMapping const &) ['database_deepclon']
public: void __cdecl CNavDialog::SetDialogCaption(wchar_t const *) ['editor_mfcsamps_asdkFileNav']
__declspec(dllimport) public: class AcGeVector3d __cdecl AcGeEllipArc3d::normal(void)const  ['entity_AssocFillet']
public: void __cdecl AcEdJig::setUserInputControls(enum AcEdJig::UserInputControls) ['database_elipsjig']
__declspec(dllimport) public: class AcGePoint3d __cdecl AcGeCurve3d::closestPointTo(class AcGePoint3d const &,class AcGeTol const &)const  ['entity_AssocFillet']
__declspec(dllimport) public: class AcGeCircArc3d & __cdecl AcGeCircArc3d::operator=(class AcGeCircArc3d const &) ['entity_AssocFillet']
__declspec(dllimport) public: double __cdecl AcGeEllipArc3d::minorRadius(void)const  ['entity_AssocFillet']
public: void __cdecl AcDbAuditInfo::errorsFound(int) ['entity_AssocFillet']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getEndParam(double &)const  ['entity_referenc']
public: enum Acad::ErrorStatus __cdecl AcDbSymbolTable::add(class AcDbObjectId &,class AcDbSymbolTableRecord *) ['database_complex']
public: virtual __cdecl CAcUiSymbolComboBox::~CAcUiSymbolComboBox(void) *OpenDCL* ['editor_mfcsamps_AsdkAcUiSample']
public: enum Acad::ErrorStatus __cdecl AcDbBlockReference::appendAttribute(class AcDbObjectId &,class AcDbAttribute *) *OpenDCL* ['database_complex']
public: enum Acad::ErrorStatus __cdecl AcDbAttributeDefinition::setConstant(bool) ['database_complex']
public: enum Acad::ErrorStatus __cdecl AcDbAttributeDefinition::setInvisible(bool) ['database_complex']
public: enum Acad::ErrorStatus __cdecl AcDbObject::addPersistentReactor(class AcDbObjectId) ['reactors_persreac']
public: double __cdecl AcDbTextStyleTableRecord::obliquingAngle(void)const  ['graphics_stylcvrt']
__declspec(dllimport) public: class AcGePoint3d const & __cdecl AcEdInputPoint::osnappedPoint(void)const  ['reactors_inputpoint']
class CWinApp * __cdecl acedGetAcadWinApp(void) ['com_AsdkMfcComSamp']
public: __cdecl CAcUiNavDialog::CAcUiNavDialog(class CNavDataArray &,class CNavFilterArray &,unsigned int,class CWnd *,struct HINSTANCE__ *) ['editor_mfcsamps_asdkFileNav']
public: virtual void __cdecl CAcUiNavDialog::OnPaintPreview(wchar_t const *,class CWnd *) ['editor_mfcsamps_asdkFileNav']
public: void __cdecl AcDbDictionary::setTreatElementsAsHard(bool) ['database_clonenod']
public: class AcGeVector3d __cdecl AcDbDatabase::ucsydir(void)const  ['database_elipsjig']
public: virtual bool __cdecl AcDbEllipse::isPlanar(void)const  ['entity_referenc']
public: virtual void __cdecl AcApProfileManagerReactor::currentProfileSaved(wchar_t const *) ['reactors_AsdkProfileSample']
public: __cdecl CAcUiPickButton::CAcUiPickButton(void) ['editor_mfcsamps_AsdkAcUiSample']
__declspec(dllimport) public: __cdecl AcGePointOnCurve3d::~AcGePointOnCurve3d(void) ['entity_AssocFillet']
public: virtual void __cdecl AcApProfileManagerReactor::currentProfileChanged(wchar_t const *) ['reactors_AsdkProfileSample']
public: __cdecl CAcUiDialog::CAcUiDialog(unsigned int,class CWnd *,struct HINSTANCE__ *) ['editor_mfcsamps_AsdkAcUiSample']
public: enum AcDbAssocStatus __cdecl AcDbAssocAction::status(void)const  ['entity_AssocFillet']
public: unsigned short __cdecl AcDbAttributeDefinition::fieldLength(void)const  *OpenDCL* ['database_complex']
__declspec(dllimport) public: class AcGeInterval & __cdecl AcGeInterval::setUpper(double) ['entity_AssocFillet']
public: class AcDbGroupIterator * __cdecl AcDbGroup::newIterator(void) ['database_groups']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::getSecondDeriv(double,class AcGeVector3d &)const  ['entity_referenc']
public: void __cdecl CAdUiDialog::SetPersistency(int) ['editor_mfcsamps_asdkFileNav']
public: enum Acad::ErrorStatus __cdecl AcDbCircle::setCenter(class AcGePoint3d const &) ['database_complex']
public: virtual __cdecl AcDbAssocActionBody::~AcDbAssocActionBody(void) ['entity_AssocFillet']
public: __cdecl CNavDataArray::CNavDataArray(void) ['editor_mfcsamps_asdkFileNav']
protected: void __cdecl CAdUiBaseDialog::CancelEditorCommand(void) ['editor_mfcsamps_AsdkAcUiSample']
public: int __cdecl CAdUiDialog::SetControlProperty(struct _dlgControlTag *,unsigned long) ['editor_mfcsamps_AsdkAcUiSample']
protected: void __cdecl CAdUiBaseDialog::CompleteEditorCommand(int) ['editor_mfcsamps_AsdkAcUiSample']
__declspec(dllimport) public: void __cdecl AcGeCurve3d::getTrimmedOffset(double,class AcGeVector3d const &,class AcArray<void *,class AcArrayMemCopyReallocator<void *> > &,enum AcGe::OffsetCrvExtType,class AcGeTol const &)const  ['entity_AssocFillet']
__declspec(dllimport) public: class AcArray<class AcDbObjectId,class AcArrayMemCopyReallocator<class AcDbObjectId> > const & __cdecl AcEdInputPoint::keyPointEntities(void)const  ['reactors_inputpoint']
public: enum Acad::ErrorStatus __cdecl AcDbAttributeDefinition::setVerifiable(bool) ['database_complex']
__declspec(dllimport) public: __cdecl AcGeCircArc3d::~AcGeCircArc3d(void) ['entity_AssocFillet']
public: class AcGePoint3d __cdecl AcDbText::position(void)const  *OpenDCL* ['database_complex']
public: virtual struct CRuntimeClass * __cdecl CAcUiDialog::GetRuntimeClass(void)const  ['editor_mfcsamps_AsdkAcUiSample']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::extend(bool,class AcGePoint3d const &) ['entity_referenc']
public: enum Acad::ErrorStatus __cdecl AcDbObject::createExtensionDictionary(void) ['database_xtsndict']
public: virtual class CWnd * __cdecl CAdUiBaseDialog::AppMainWindow(void) ['editor_mfcsamps_asdkFileNav']
public: virtual int __cdecl CAcUiDialog::OnInitDialog(void) ['editor_mfcsamps_AsdkAcUiSample']
__declspec(dllimport) public: int __cdecl AcString::compare(wchar_t const *)const  ['entity_AssocFillet']
public: virtual struct HINSTANCE__ * __cdecl CAdUiBaseDialog::AppResourceInstance(void) ['editor_mfcsamps_asdkFileNav']
public: double __cdecl AcDbCircle::radius(void)const  ['entity_tempapp']
public: virtual enum Acad::ErrorStatus __cdecl AcDbEllipse::extend(double) ['entity_referenc']
__declspec(dllimport) public: __cdecl AcGeCurveCurveInt3d::~AcGeCurveCurveInt3d(void) ['entity_AssocFillet']
void __cdecl acutDelBuffer(void * &) *OpenDCL* ['reactors_AsdkProfileSample']
public: void __cdecl CAcUiEdit::SetRange(double,double) ['editor_mfcsamps_AsdkAcUiSample']
public: static class AcRxClass * __cdecl AcDb2dVertex::desc(void) ['database_pliniter']
__declspec(dllimport) public: bool __cdecl AcGeCurve3d::isPlanar(class AcGePlane &,class AcGeTol const &)const  ['entity_AssocFillet']
public: static class AcRxClass * __cdecl AcDbCircle::desc(void) ['entity_tempapp']
public: virtual int __cdecl CAcUiNavDialog::IsMultiDocumentActivationEnabled(void) ['editor_mfcsamps_asdkFileNav']
public: enum Acad::ErrorStatus __cdecl AcDbGroup::setColorIndex(unsigned short) ['database_groups']
__declspec(dllimport) public: bool __cdecl AcGeVector3d::isCodirectionalTo(class AcGeVector3d const &,class AcGeTol const &)const  ['entity_AssocFillet']
351 dependencies were not found
public: virtual void __cdecl CAdUiComboBox::MeasureItem(struct tagMEASUREITEMSTRUCT *) *OpenDCL*
public: __cdecl CAcUiStringEdit::CAcUiStringEdit(void) *OpenDCL*
public: virtual int __cdecl CAcUiMRUComboBox::ImageWidth(void) *OpenDCL*
public: virtual __cdecl CAcUiPlotStyleTablesComboBox::~CAcUiPlotStyleTablesComboBox(void) *OpenDCL*
public: virtual __cdecl CAcUiPlotStyleNamesComboBox::~CAcUiPlotStyleNamesComboBox(void) *OpenDCL*
public: __cdecl CAcUiAngleComboBox::CAcUiAngleComboBox(void) *OpenDCL*
public: static class AcRxClass * __cdecl AcDbMText::desc(void) *OpenDCL*
__declspec(dllimport) public: class AcGePoint2d & __cdecl AcGePoint2d::set(double,double) *OpenDCL*
public: class AcCmColor __cdecl AcDbLayerTableRecord::color(void)const  *OpenDCL*
public: virtual __cdecl CAdUiPaletteSet::~CAdUiPaletteSet(void) *OpenDCL*
protected: virtual int __cdecl CAcUiColorComboBox::OnSelectOther(int,int,int &) *OpenDCL*
int __cdecl acedStartOverrideDropTarget(class COleDropTarget *) *OpenDCL*
public: virtual int __cdecl CAdUiPaletteSet::Load(struct IUnknown *) *OpenDCL*
int __cdecl acedRetVoid(void) *OpenDCL*
protected: virtual void __cdecl CAcUiPlotStyleTablesComboBox::OnComboBoxInit(void) *OpenDCL*
public: __cdecl CAcUiTabChildDialog::CAcUiTabChildDialog(class CWnd *,struct HINSTANCE__ *) *OpenDCL*
void __cdecl accmGetLocalizedColorNames(wchar_t const * * const) *OpenDCL*
public: enum Acad::ErrorStatus __cdecl AcDbHatch::setPatternScale(double) *OpenDCL*
private: virtual void __cdecl CAdUiDockControlBar::OnUpdateCmdUI(class CFrameWnd *,int) *OpenDCL*
int __cdecl acedRetList(struct resbuf const *) *OpenDCL*
protected: virtual int __cdecl CAcUiColorComboBox::GetOtherName(int,class ATL::CStringT<wchar_t,class StrTraitMFC_DLL<wchar_t,class ATL::ChTraitsCRT<wchar_t> > > &) *OpenDCL*
public: enum Acad::ErrorStatus __cdecl AcDbDatabase::closeInput(bool) *OpenDCL*
protected: virtual int __cdecl CAcUiMRUComboBox::OnSelectOther(int,int,int &) *OpenDCL*
public: class AcGePoint3d __cdecl AcDbDatabase::extmax(void)const  *OpenDCL*
protected: static struct AFX_MSGMAP const * __cdecl CAcUiLineWeightComboBox::GetThisMessageMap(void) *OpenDCL*
protected: virtual int __cdecl CAcUiMRUComboBox::CalcItemHeight(void) *OpenDCL*
protected: virtual int __cdecl CAdUiBaseDialog::OnInitDialog(void) *OpenDCL*
protected: virtual void __cdecl CAcUiTabChildDialog::DoDataExchange(class CDataExchange *) *OpenDCL*
public: virtual int __cdecl CAcUiLineWeightComboBox::ImageWidth(void) *OpenDCL*
class AcDbDatabase * __cdecl AcApGetDatabase(class CView *) *OpenDCL*
protected: virtual void __cdecl CAcUiPlotStyleNamesComboBox::OnAddItems(void) *OpenDCL*
protected: virtual void __cdecl CAcUiLineWeightComboBox::DrawItemImage(class CDC &,class CRect &,__int64) *OpenDCL*
public: int __cdecl CAcUiComboBox::ConvertData(class ATL::CStringT<wchar_t,class StrTraitMFC_DLL<wchar_t,class ATL::ChTraitsCRT<wchar_t> > > &) *OpenDCL*
protected: virtual bool __cdecl CAdUiDockControlBar::OnClosing(void) *OpenDCL*
public: virtual void __cdecl AcDbDatabaseReactor::objectErased(class AcDbDatabase const *,class AcDbObject const *,bool) *OpenDCL*
int __cdecl acedGetSym(wchar_t const *,struct resbuf * *) *OpenDCL*
public: virtual void __cdecl CAcUiStringEdit::SetStyleMask(unsigned long) *OpenDCL*
public: void __cdecl CAdUiPaletteSet::EnableDocking(unsigned long) *OpenDCL*
protected: virtual void __cdecl CAcUiLineTypeComboBox::DrawItemImage(class CDC &,class CRect &,__int64) *OpenDCL*
public: void __cdecl CAdUiDockControlBar::SetToolID(struct _GUID *) *OpenDCL*
protected: virtual struct AFX_MSGMAP const * __cdecl CAcUiStringEdit::GetMessageMap(void)const  *OpenDCL*
protected: static struct AFX_MSGMAP const * __cdecl CAcUiPlotStyleNamesComboBox::GetThisMessageMap(void) *OpenDCL*
protected: virtual void __cdecl CAdUiPaletteSet::OnTabDrag(class CPtrArray &) *OpenDCL*
int __cdecl acedRetVal(struct resbuf const *) *OpenDCL*
int __cdecl acedAlert(wchar_t const *) *OpenDCL*
protected: virtual int __cdecl CAcUiColorComboBox::GetOtherColorIndex(int,int,int,int &) *OpenDCL*
public: __cdecl CAcUiPlotStyleNamesComboBox::CAcUiPlotStyleNamesComboBox(void) *OpenDCL*
public: virtual struct CRuntimeClass * __cdecl CAcUiAngleEdit::GetRuntimeClass(void)const  *OpenDCL*
protected: virtual void __cdecl CAcUiMRUComboBox::DrawItemImage(class CDC &,class CRect &,__int64) *OpenDCL*
public: enum Acad::ErrorStatus __cdecl AcDbHatch::appendLoop(int,class AcArray<class AcDbObjectId,class AcArrayMemCopyReallocator<class AcDbObjectId> > const &) *OpenDCL*
__declspec(dllimport) public: class AcGePoint3d & __cdecl AcGePoint3d::operator+=(class AcGeVector3d const &) *OpenDCL*
public: void __cdecl CAcUiArrowHeadComboBox::SetUseOrigin2(int) *OpenDCL*
public: virtual __cdecl CAdUiDockControlBar::~CAdUiDockControlBar(void) *OpenDCL*
int __cdecl acedEvaluateLisp(wchar_t const *,struct resbuf * &) *OpenDCL*
public: wchar_t * __cdecl AcDbAttributeDefinition::tag(void)const  *OpenDCL*
public: void __cdecl AcDbExtents::addExt(class AcDbExtents const &) *OpenDCL*
public: virtual void __cdecl CAcUiTabChildDialog::OnDialogHelp(void) *OpenDCL*
protected: int __cdecl CAcUiMRUComboBox::OnDropDown(void) *OpenDCL*
__declspec(dllimport) public: double __cdecl AcGeVector3d::lengthSqrd(void)const  *OpenDCL*
enum Acad::ErrorStatus __cdecl acedXrefAttach(wchar_t const *,wchar_t const *,class AcDbObjectId *,class AcDbObjectId *,class AcGePoint3d const *,class AcGeScale3d const *,double const *,bool,class AcDbDatabase *,wchar_t const *) *OpenDCL*
public: wchar_t * __cdecl AcDbMText::contents(void)const  *OpenDCL*
int __cdecl acedFindFile(wchar_t const *,wchar_t *,unsigned __int64) *OpenDCL*
__declspec(dllimport) public: __cdecl AcGeVector3d::AcGeVector3d(class AcGeVector3d const &) *OpenDCL*
protected: virtual struct AFX_MSGMAP const * __cdecl CAcUiAngleComboBox::GetMessageMap(void)const  *OpenDCL*
public: bool __cdecl AcDbLayerTableRecord::isFrozen(void)const  *OpenDCL*
public: class AcDbObjectId __cdecl AcDbDatabase::clayer(void)const  *OpenDCL*
public: virtual __cdecl CAcUiLineTypeComboBox::~CAcUiLineTypeComboBox(void) *OpenDCL*
protected: virtual int __cdecl CAdUiEdit::OnHitTipRect(class CPoint &) *OpenDCL*
class AcGsManager * __cdecl acgsGetGsManager(class CView *) *OpenDCL*
public: bool __cdecl AcDbLayerTableRecord::isOff(void)const  *OpenDCL*
__declspec(dllimport) public: class AcGeVector3d & __cdecl AcGeVector3d::rotateBy(double,class AcGeVector3d const &) *OpenDCL*
public: virtual void __cdecl CAcUiEdit::SetStyleMask(unsigned long) *OpenDCL*
protected: virtual void __cdecl CAdUiTabChildDialog::OnInitDialogBegin(void) *OpenDCL*
public: virtual void __cdecl CAcUiMRUComboBox::GetContentExtent(wchar_t const *,int &,int &) *OpenDCL*
public: virtual void __cdecl CAcUiSymbolEdit::SetStyleMask(unsigned long) *OpenDCL*
protected: static struct AFX_MSGMAP const * __cdecl CAcUiColorComboBox::GetThisMessageMap(void) *OpenDCL*
public: virtual void __cdecl CAdUiComboBox::PreSubclassWindow(void) *OpenDCL*
public: __cdecl AcDbExtents::AcDbExtents(void) *OpenDCL*
public: enum Acad::ErrorStatus __cdecl AcDbDatabase::getFilename(wchar_t const * &)const  *OpenDCL*
protected: virtual void __cdecl CAcUiPlotStyleTablesComboBox::DrawItemImage(class CDC &,class CRect &,__int64) *OpenDCL*
public: __cdecl AcGiDrawable::AcGiDrawable(void) *OpenDCL*
protected: virtual void __cdecl CAdUiPaletteSet::ThemeModified(enum AdUiThemeElement) *OpenDCL*
public: virtual int __cdecl CAdUiDockControlBar::Save(struct IUnknown *) *OpenDCL*
public: virtual bool __cdecl AcCmColor::isByColor(void)const  *OpenDCL*
public: virtual unsigned char __cdecl AcCmColor::green(void)const  *OpenDCL*
private: virtual __int64 __cdecl CAdUiDockControlBar::WindowProc(unsigned int,unsigned __int64,__int64) *OpenDCL*
public: __cdecl CAcUiSymbolEdit::CAcUiSymbolEdit(void) *OpenDCL*
protected: virtual struct AFX_MSGMAP const * __cdecl CAcUiLineTypeComboBox::GetMessageMap(void)const  *OpenDCL*
public: static class AcRxClass * __cdecl AcDbLayerTableRecord::desc(void) *OpenDCL*
__declspec(dllimport) public: __cdecl AcGeLineSeg3d::AcGeLineSeg3d(class AcGePoint3d const &,class AcGePoint3d const &) *OpenDCL*
public: __cdecl CAcUiPlotStyleTablesComboBox::CAcUiPlotStyleTablesComboBox(void) *OpenDCL*
protected: static struct AFX_MSGMAP const * __cdecl CAcUiTabChildDialog::GetThisMessageMap(void) *OpenDCL*
public: virtual int __cdecl CAcUiColorComboBox::GetColorIndex(unsigned long) *OpenDCL*
public: enum Acad::ErrorStatus __cdecl AcDbDatabase::setMeasurement(enum AcDb::MeasurementValue) *OpenDCL*
public: enum Acad::ErrorStatus __cdecl AcDbExtents::addBlockExt(class AcDbBlockTableRecord *) *OpenDCL*
public: virtual struct CRuntimeClass * __cdecl CAdUiPaletteSet::GetRuntimeClass(void)const  *OpenDCL*
__declspec(dllimport) public: double __cdecl AcGeMatrix3d::scale(void)const  *OpenDCL*
public: virtual void __cdecl CAcUiTabChildDialog::EnableFloatingWindows(int) *OpenDCL*
public: __cdecl AcDbExtents::AcDbExtents(class AcDbExtents const &) *OpenDCL*
public: virtual unsigned char __cdecl AcCmColor::blue(void)const  *OpenDCL*
protected: static struct AFX_MSGMAP const * __cdecl CAdUiPaletteSet::GetThisMessageMap(void) *OpenDCL*
public: virtual int __cdecl CAdUiDockControlBar::Load(struct IUnknown *) *OpenDCL*
protected: virtual void __cdecl CAdUiDockControlBar::PaintControlBar(class CDC *) *OpenDCL*
public: virtual struct CRuntimeClass * __cdecl CAcUiEdit::GetRuntimeClass(void)const  *OpenDCL*
int __cdecl acedRemoveDropTarget(class COleDropTarget *) *OpenDCL*
protected: virtual struct AFX_MSGMAP const * __cdecl CAcUiLineWeightComboBox::GetMessageMap(void)const  *OpenDCL*
protected: virtual struct AFX_MSGMAP const * __cdecl CAcUiSymbolComboBox::GetMessageMap(void)const  *OpenDCL*
enum AcDb::DwgDataType __cdecl acdbGroupCodeToType(short) *OpenDCL*
int __cdecl acedInvoke(struct resbuf const *,struct resbuf * *) *OpenDCL*
public: virtual __cdecl CAcUiTabChildDialog::~CAcUiTabChildDialog(void) *OpenDCL*
protected: virtual int __cdecl CAcUiColorComboBox::GetWindowsColor(unsigned long &) *OpenDCL*
public: __cdecl CAcUiEdit::CAcUiEdit(void) *OpenDCL*
protected: virtual bool __cdecl CAcUiArrowHeadComboBox::LoadImages(void) *OpenDCL*
public: __cdecl AcGiVisualStyle::AcGiVisualStyle(enum AcGiVisualStyle::Type) *OpenDCL*
public: virtual void __cdecl AcApDocManagerReactor::documentToBeDestroyed(class AcApDocument *) *OpenDCL*
protected: int __cdecl CAcUiPlotStyleTablesComboBox::OnDropDown(void) *OpenDCL*
__declspec(dllimport) public: class AcGeVector3d __cdecl AcGePoint3d::asVector(void)const  *OpenDCL*
public: virtual int __cdecl CAcUiColorComboBox::GetCurrentLayerColorIndex(void) *OpenDCL*
protected: void __cdecl CAdUiEdit::OnMouseMove(unsigned int,class CPoint) *OpenDCL*
public: virtual int __cdecl CAdUiPaletteSet::Save(struct IUnknown *) *OpenDCL*
public: virtual int __cdecl CAcUiMRUComboBox::GetItemColors(struct tagDRAWITEMSTRUCT &,unsigned long &,unsigned long &,unsigned long &) *OpenDCL*
public: class CAdUiTabMainDialog * __cdecl CAdUiTabChildDialog::GetMainDialog(void) *OpenDCL*
public: virtual unsigned long __cdecl CAcUiColorComboBox::LookupColor(int,struct tagLOGPALETTE *) *OpenDCL*
public: virtual struct CRuntimeClass * __cdecl CAcUiComboBox::GetRuntimeClass(void)const  *OpenDCL*
public: virtual int __cdecl CAcUiPlotStyleNamesComboBox::ImageWidth(void) *OpenDCL*
protected: static struct AFX_MSGMAP const * __cdecl CAcUiLineTypeComboBox::GetThisMessageMap(void) *OpenDCL*
public: void __cdecl CAcUiPlotStyleTablesComboBox::GetLBText(int,class ATL::CStringT<wchar_t,class StrTraitMFC_DLL<wchar_t,class ATL::ChTraitsCRT<wchar_t> > > &)const  *OpenDCL*
public: enum Acad::ErrorStatus __cdecl AcDbDimStyleTable::newIterator(class AcDbDimStyleTableIterator * &,bool,bool)const  *OpenDCL*
public: virtual __cdecl CAcUiAngleComboBox::~CAcUiAngleComboBox(void) *OpenDCL*
public: virtual int __cdecl CAdUiBaseDialog::EnableMultiDocumentActivation(int) *OpenDCL*
void __cdecl acedCoordFromPixelToWorld(class CPoint const &,double * const) *OpenDCL*
public: virtual unsigned char __cdecl AcCmColor::red(void)const  *OpenDCL*
int __cdecl acedRetT(void) *OpenDCL*
protected: virtual void __cdecl CAcUiPlotStyleNamesComboBox::OnComboBoxInit(void) *OpenDCL*
public: int __cdecl CAdUiPaletteSet::RolledUp(void) *OpenDCL*
class CWnd * __cdecl acedGetAcadDockCmdLine(void) *OpenDCL*
public: bool __cdecl AcDbBlockTableRecord::hasPreviewIcon(void)const  *OpenDCL*
protected: virtual void __cdecl CAcUiColorComboBox::DrawItemImage(class CDC &,class CRect &,__int64) *OpenDCL*
public: virtual struct HINSTANCE__ * __cdecl CAcUiTabChildDialog::AppResourceInstance(void) *OpenDCL*
public: int __cdecl CAcUiLineWeightComboBox::FindItemByLineWeight(int) *OpenDCL*
protected: virtual void __cdecl CAcUiArrowHeadComboBox::OnAddItems(void) *OpenDCL*
__declspec(dllimport) public: bool __cdecl AcGsGraphicsKernel::delRef(void) *OpenDCL*
protected: virtual void __cdecl CAdUiPaletteSet::EditName(void) *OpenDCL*
protected: static struct AFX_MSGMAP const * __cdecl CAcUiPlotStyleTablesComboBox::GetThisMessageMap(void) *OpenDCL*
__declspec(dllimport) public: class AcGeMatrix3d __cdecl AcGeMatrix3d::inverse(void)const  *OpenDCL*
protected: virtual enum ADUI_REPLY __cdecl CAdUiEdit::OnGetTipSupport(class CPoint &) *OpenDCL*
protected: virtual int __cdecl CAdUiComboBox::OnGetTipRect(class CRect &) *OpenDCL*
protected: virtual int __cdecl CAdUiComboBox::OnDrawTipText(class CAdUiDrawTipText &) *OpenDCL*
protected: void __cdecl CAcUiEdit::OnKillFocus(class CWnd *) *OpenDCL*
public: virtual __cdecl CAcUiArrowHeadComboBox::~CAcUiArrowHeadComboBox(void) *OpenDCL*
public: int __cdecl CAdUiPaletteSet::SetName(wchar_t const *) *OpenDCL*
public: void __cdecl CAcUiColorComboBox::SetBlockColorIndex(int) *OpenDCL*
protected: virtual struct AFX_MSGMAP const * __cdecl CAcUiSymbolEdit::GetMessageMap(void)const  *OpenDCL*
__declspec(dllimport) public: class AcGeVector3d __cdecl AcGeVector3d::perpVector(void)const  *OpenDCL*
protected: virtual int __cdecl CAcUiLineTypeComboBox::OnSelectOther(int,int,int &) *OpenDCL*
protected: virtual void __cdecl CAcUiLineWeightComboBox::OnAddItems(void) *OpenDCL*
public: bool __cdecl AcDbBlockTableRecord::isLayout(void)const  *OpenDCL*
public: int __cdecl CAcUiColorComboBox::AddColorToMRU(int) *OpenDCL*
protected: virtual void __cdecl CAdUiPaletteSet::OnContextMenu(class CWnd *,class CPoint) *OpenDCL*
public: virtual __cdecl CAcUiLineWeightComboBox::~CAcUiLineWeightComboBox(void) *OpenDCL*
public: virtual wchar_t const * __cdecl CAcUiTabChildDialog::AppRootKey(void) *OpenDCL*
int __cdecl acedAddDropTarget(class COleDropTarget *) *OpenDCL*
protected: virtual void __cdecl CAdUiTabChildDialog::OnInitDialogFinish(void) *OpenDCL*
protected: virtual struct AFX_MSGMAP const * __cdecl CAcUiPlotStyleTablesComboBox::GetMessageMap(void)const  *OpenDCL*
protected: virtual struct AFX_MSGMAP const * __cdecl CAcUiAngleEdit::GetMessageMap(void)const  *OpenDCL*
public: virtual enum Acad::ErrorStatus __cdecl AcCmColor::setColorMethod(enum AcCmEntityColor::ColorMethod) *OpenDCL*
__declspec(dllimport) public: class AcGeMatrix3d __cdecl AcGeMatrix3d::operator*(class AcGeMatrix3d const &)const  *OpenDCL*
public: virtual void __cdecl CAcUiLineTypeComboBox::OnComboBoxInit(void) *OpenDCL*
protected: virtual int __cdecl CAdUiPaletteSet::GetBottomReservedHeight(void) *OpenDCL*
public: static class AcRxClass * __cdecl AcDbLayout::desc(void) *OpenDCL*
__declspec(dllimport) public: static class AcGeVector3d const AcGeVector3d::kYAxis *OpenDCL*
public: virtual __cdecl AcGiDrawable::~AcGiDrawable(void) *OpenDCL*
class CView * __cdecl acedGetAcadDwgView(void) *OpenDCL*
public: enum Acad::ErrorStatus __cdecl AcDbDatabase::insert(class AcDbObjectId &,wchar_t const *,class AcDbDatabase *,bool) *OpenDCL*
protected: static struct AFX_MSGMAP const * __cdecl CAcUiArrowHeadComboBox::GetThisMessageMap(void) *OpenDCL*
protected: virtual int __cdecl CAcUiPlotStyleTablesComboBox::CalcItemHeight(void) *OpenDCL*
protected: virtual int __cdecl CAdUiComboBox::OnHitTipRect(class CPoint &) *OpenDCL*
public: enum Acad::ErrorStatus __cdecl AcDbDatabase::wblock(class AcDbDatabase * &,class AcDbObjectId) *OpenDCL*
protected: static struct AFX_MSGMAP const * __cdecl CAdUiDockControlBar::GetThisMessageMap(void) *OpenDCL*
__declspec(dllimport) public: __cdecl AcGeLineSeg3d::~AcGeLineSeg3d(void) *OpenDCL*
public: virtual void __cdecl CAcUiLineTypeComboBox::DrawItem(struct tagDRAWITEMSTRUCT *) *OpenDCL*
protected: virtual int __cdecl CAdUiPaletteSet::AddContextMenuItems(class CMenu *,int,int) *OpenDCL*
public: __cdecl CAcUiLineTypeComboBox::CAcUiLineTypeComboBox(void) *OpenDCL*
public: int __cdecl CAdUiPaletteSet::RemovePalette(class CAdUiPalette *) *OpenDCL*
int __cdecl acedPutSym(wchar_t const *,struct resbuf *) *OpenDCL*
struct HINSTANCE__ * __cdecl acedGetAcadResourceInstance(void) *OpenDCL*
protected: virtual __int64 __cdecl CAdUiComboBox::WindowProc(unsigned int,unsigned __int64,__int64) *OpenDCL*
public: virtual void __cdecl CAdUiDockControlBar::ThemeModified(enum AdUiThemeElement) *OpenDCL*
enum Acad::ErrorStatus __cdecl acutNewString(wchar_t const *,wchar_t * &) *OpenDCL*
public: bool __cdecl AcDbBlockTableRecord::isFromExternalReference(void)const  *OpenDCL*
public: virtual struct CRuntimeClass * __cdecl CAcUiAngleComboBox::GetRuntimeClass(void)const  *OpenDCL*
protected: virtual int __cdecl CAdUiEdit::OnGetTipRect(class CRect &) *OpenDCL*
public: void __cdecl AcDbSymbolTableIterator::start(bool,bool) *OpenDCL*
struct HWND__ * __cdecl adsw_acadDocWnd(void) *OpenDCL*
protected: virtual void __cdecl CAcUiMRUComboBox::OnComboBoxInit(void) *OpenDCL*
protected: int __cdecl CAdUiDockControlBar::OnEraseBkgnd(class CDC *) *OpenDCL*
__declspec(dllimport) public: static class AcGeMatrix3d __cdecl AcGeMatrix3d::alignCoordSys(class AcGePoint3d const &,class AcGeVector3d const &,class AcGeVector3d const &,class AcGeVector3d const &,class AcGePoint3d const &,class AcGeVector3d const &,class AcGeVector3d const &,class AcGeVector3d const &) *OpenDCL*
public: virtual __cdecl AcGiVisualStyle::~AcGiVisualStyle(void) *OpenDCL*
public: bool __cdecl AcDbBlockTableRecord::isAnonymous(void)const  *OpenDCL*
protected: virtual int __cdecl CAcUiArrowHeadComboBox::CalcItemHeight(void) *OpenDCL*
int __cdecl acedGetCurrentColors(struct AcColorSettings *) *OpenDCL*
__declspec(dllimport) public: __cdecl AcGeScale3d::AcGeScale3d(double,double,double) *OpenDCL*
public: virtual int __cdecl CAcUiMRUComboBox::ExtraWidth(void) *OpenDCL*
protected: virtual int __cdecl CAdUiDockControlBar::AddCustomMenuItems(__int64) *OpenDCL*
public: __cdecl CAcUiColorComboBox::CAcUiColorComboBox(void) *OpenDCL*
protected: virtual void __cdecl CAdUiEdit::OnDrawTip(class CDC &) *OpenDCL*
public: virtual int __cdecl CAdUiBaseDialog::IsMultiDocumentActivationEnabled(void) *OpenDCL*
protected: virtual void __cdecl CAdUiComboBox::OnDrawTip(class CDC &) *OpenDCL*
public: int __cdecl CAcUiColorComboBox::FindItemByColorIndex(int) *OpenDCL*
protected: virtual int __cdecl CAcUiArrowHeadComboBox::GetOtherName(int,class ATL::CStringT<wchar_t,class StrTraitMFC_DLL<wchar_t,class ATL::ChTraitsCRT<wchar_t> > > &) *OpenDCL*
public: virtual int __cdecl CAdUiPaletteSet::NameEditValidation(class CEdit *) *OpenDCL*
protected: void __cdecl CAdUiDockControlBar::GetUsedRect(class CRect &) *OpenDCL*
public: __cdecl CAcUiLineWeightComboBox::CAcUiLineWeightComboBox(void) *OpenDCL*
public: enum Acad::ErrorStatus __cdecl AcDbText::setAlignmentPoint(class AcGePoint3d const &) *OpenDCL*
__declspec(dllimport) public: class AcGeVector3d __cdecl AcGeVector3d::operator-(void)const  *OpenDCL*
public: virtual __cdecl CAcUiStringEdit::~CAcUiStringEdit(void) *OpenDCL*
protected: virtual int __cdecl CAcUiMRUComboBox::GetOptionName(int,class ATL::CStringT<wchar_t,class StrTraitMFC_DLL<wchar_t,class ATL::ChTraitsCRT<wchar_t> > > &) *OpenDCL*
int __cdecl acedEndOverrideDropTarget(class COleDropTarget *) *OpenDCL*
public: void __cdecl CAcUiMRUComboBox::SetUseWindows(int) *OpenDCL*
protected: virtual int __cdecl CAcUiLineTypeComboBox::ImageWidth(void) *OpenDCL*
enum Acad::ErrorStatus __cdecl accmGetColorFromColorBookName(class AcCmColor &,wchar_t const *,wchar_t const *) *OpenDCL*
protected: virtual int __cdecl CAdUiPaletteSet::GetTopReservedHeight(void) *OpenDCL*
int __cdecl acedRetStr(wchar_t const *) *OpenDCL*
protected: virtual int __cdecl CAdUiDockControlBar::CreateControlBar(struct tagCREATESTRUCTW *) *OpenDCL*
public: virtual int __cdecl CAcUiMRUComboBox::Create(unsigned long,struct tagRECT const &,class CWnd *,unsigned int) *OpenDCL*
public: __cdecl AcDbBlockReference::AcDbBlockReference(class AcGePoint3d const &,class AcDbObjectId) *OpenDCL*
public: virtual int __cdecl CAcUiPlotStyleTablesComboBox::OnChildNotify(unsigned int,unsigned __int64,__int64,__int64 *) *OpenDCL*
public: virtual class CSize __cdecl CAdUiDockControlBar::CalcFixedLayout(int,int) *OpenDCL*
bool __cdecl acedSetColorDialog(int &,bool,int) *OpenDCL*
public: enum Acad::ErrorStatus __cdecl AcDbBlockTableRecord::getPreviewIcon(class AcArray<unsigned char,class AcArrayMemCopyReallocator<unsigned char> > &)const  *OpenDCL*
public: virtual void __cdecl CAcUiMRUComboBox::MeasureItem(struct tagMEASUREITEMSTRUCT *) *OpenDCL*
public: virtual int __cdecl CAdUiComboBox::Create(unsigned long,struct tagRECT const &,class CWnd *,unsigned int) *OpenDCL*
public: enum Acad::ErrorStatus __cdecl AcDbHatch::setElevation(double) *OpenDCL*
public: __cdecl CAcUiArrowHeadComboBox::CAcUiArrowHeadComboBox(void) *OpenDCL*
int __cdecl acedGetWinNum(int,int) *OpenDCL*
protected: virtual struct AFX_MSGMAP const * __cdecl CAcUiPlotStyleNamesComboBox::GetMessageMap(void)const  *OpenDCL*
public: virtual struct CRuntimeClass * __cdecl CAcUiStringComboBox::GetRuntimeClass(void)const  *OpenDCL*
__declspec(dllimport) public: __cdecl AcGePoint3d::AcGePoint3d(double,double,double) *OpenDCL*
public: __cdecl CAcUiStringComboBox::CAcUiStringComboBox(void) *OpenDCL*
protected: void __cdecl CAdUiPaletteSet::OnSize(unsigned int,int,int) *OpenDCL*
public: static class AcRxClass * __cdecl AcDbDimStyleTableRecord::desc(void) *OpenDCL*
protected: void __cdecl CAdUiComboBox::OnMouseMove(unsigned int,class CPoint) *OpenDCL*
int __cdecl acedRetNil(void) *OpenDCL*
public: void __cdecl CAdUiComboBox::GetTextExtent(wchar_t const *,int &,int &) *OpenDCL*
public: enum Acad::ErrorStatus __cdecl AcDbExtents::set(class AcGePoint3d const &,class AcGePoint3d const &) *OpenDCL*
int __cdecl acedRetInt(int) *OpenDCL*
public: void __cdecl CAcUiMRUComboBox::SetUseOther(int) *OpenDCL*
protected: virtual void __cdecl CAcUiMRUComboBox::PreSubclassWindow(void) *OpenDCL*
protected: virtual enum ADUI_REPLY __cdecl CAcUiEdit::DoAdUiMessage(enum ADUI_NOTIFY,unsigned int,__int64) *OpenDCL*
int __cdecl acutWcMatch(wchar_t const *,wchar_t const *) *OpenDCL*
public: virtual void __cdecl CAcUiArrowHeadComboBox::DrawItem(struct tagDRAWITEMSTRUCT *) *OpenDCL*
public: virtual __cdecl CAdUiPalette::~CAdUiPalette(void) *OpenDCL*
protected: static struct AFX_MSGMAP const * __cdecl CAcUiEdit::GetThisMessageMap(void) *OpenDCL*
public: int __cdecl CAcUiColorComboBox::GetCurrentItemColorIndex(void) *OpenDCL*
bool __cdecl AcadIsQuitting(void) *OpenDCL*
public: enum AcDb::TextHorzMode __cdecl AcDbText::horizontalMode(void)const  *OpenDCL*
public: enum AcDb::TextVertMode __cdecl AcDbText::verticalMode(void)const  *OpenDCL*
public: void __cdecl CAcUiLineTypeComboBox::AddItems(void) *OpenDCL*
protected: virtual int __cdecl CAdUiComboBox::OnGetTipText(class ATL::CStringT<wchar_t,class StrTraitMFC_DLL<wchar_t,class ATL::ChTraitsCRT<wchar_t> > > &) *OpenDCL*
public: __cdecl CAdUiPalette::CAdUiPalette(void) *OpenDCL*
protected: virtual enum ADUI_REPLY __cdecl CAdUiComboBox::DoAdUiMessage(enum ADUI_NOTIFY,unsigned int,__int64) *OpenDCL*
public: virtual __cdecl CAcUiSymbolEdit::~CAcUiSymbolEdit(void) *OpenDCL*
int __cdecl acedGetEnv(wchar_t const *,wchar_t *,unsigned __int64) *OpenDCL*
protected: virtual int __cdecl CAdUiEdit::OnGetTipText(class ATL::CStringT<wchar_t,class StrTraitMFC_DLL<wchar_t,class ATL::ChTraitsCRT<wchar_t> > > &) *OpenDCL*
public: virtual int __cdecl CAdUiPaletteSet::PreTranslateMessage(struct tagMSG *) *OpenDCL*
__declspec(dllimport) public: __cdecl AcGeVector3d::AcGeVector3d(double,double,double) *OpenDCL*
protected: virtual struct AFX_MSGMAP const * __cdecl CAcUiColorComboBox::GetMessageMap(void)const  *OpenDCL*
public: int __cdecl CAdUiPaletteSet::Create(wchar_t const *,unsigned long,struct tagRECT const &,class CWnd *,unsigned long) *OpenDCL*
public: virtual int __cdecl CAcUiPlotStyleTablesComboBox::ImageWidth(void) *OpenDCL*
__declspec(dllimport) public: static class AcGeVector3d const AcGeVector3d::kXAxis *OpenDCL*
protected: virtual int __cdecl CAcUiPlotStyleNamesComboBox::OnSelectOther(int,int,int &) *OpenDCL*
public: enum Acad::ErrorStatus __cdecl AcDbHatch::evaluateHatch(bool) *OpenDCL*
public: class AcGePoint3d __cdecl AcDbText::alignmentPoint(void)const  *OpenDCL*
protected: virtual int __cdecl CAdUiDockControlBar::OnCommand(unsigned __int64,__int64) *OpenDCL*
public: virtual int __cdecl CAdUiComboBox::OnChildNotify(unsigned int,unsigned __int64,__int64,__int64 *) *OpenDCL*
protected: virtual int __cdecl CAcUiMRUComboBox::OnGetTipRect(class CRect &) *OpenDCL*
protected: virtual void __cdecl CAdUiTabChildDialog::OnOK(void) *OpenDCL*
__declspec(dllimport) public: class AcGeVector3d & __cdecl AcGeVector3d::transformBy(class AcGeMatrix3d const &) *OpenDCL*
public: virtual void __cdecl CAcUiMRUComboBox::DrawItem(struct tagDRAWITEMSTRUCT *) *OpenDCL*
public: void __cdecl AcDbExtents::transformBy(class AcGeMatrix3d const &) *OpenDCL*
protected: virtual struct AFX_MSGMAP const * __cdecl CAcUiArrowHeadComboBox::GetMessageMap(void)const  *OpenDCL*
public: class AcDbObjectId __cdecl AcDbDatabase::currentSpaceId(void)const  *OpenDCL*
public: __cdecl CAdUiPaletteSet::CAdUiPaletteSet(int) *OpenDCL*
public: virtual int __cdecl CAdUiDockControlBar::Create(wchar_t const *,wchar_t const *,unsigned long,struct tagRECT const &,class CWnd *,unsigned int,struct CCreateContext *) *OpenDCL*
protected: int __cdecl CAdUiPaletteSet::OnEraseBkgnd(class CDC *) *OpenDCL*
__declspec(dllimport) public: class AcGePoint3d & __cdecl AcGePoint3d::set(double,double,double) *OpenDCL*
public: int __cdecl CAdUiPaletteSet::AddPalette(class CAdUiPalette *) *OpenDCL*
public: virtual void __cdecl CAdUiEdit::GetContentExtent(wchar_t const *,int &,int &) *OpenDCL*
protected: virtual void __cdecl CAcUiColorComboBox::OnAddItems(void) *OpenDCL*
public: void __cdecl CAdUiDockControlBar::RestoreControlBar(unsigned int,class CRect *) *OpenDCL*
int __cdecl acdbRToS(double,int,int,wchar_t *,unsigned __int64) *OpenDCL*
public: virtual struct CRuntimeClass * __cdecl CAcUiSymbolEdit::GetRuntimeClass(void)const  *OpenDCL*
public: enum Acad::ErrorStatus __cdecl AcDbLayerTable::newIterator(class AcDbLayerTableIterator * &,bool,bool)const  *OpenDCL*
public: static bool __cdecl CAdUiComboBox::IsVistaTheme(void) *OpenDCL*
protected: virtual __int64 __cdecl CAcUiMRUComboBox::WindowProc(unsigned int,unsigned __int64,__int64) *OpenDCL*
public: virtual unsigned long __cdecl CAcUiColorComboBox::GetColorFromIndex(int) *OpenDCL*
public: void __cdecl CAdUiComboBox::SetStyleMask(unsigned long) *OpenDCL*
__declspec(dllimport) public: class AcGePoint3d __cdecl AcGePoint3d::operator+(class AcGeVector3d const &)const  *OpenDCL*
protected: virtual int __cdecl CAcUiMRUComboBox::GetOtherName(int,class ATL::CStringT<wchar_t,class StrTraitMFC_DLL<wchar_t,class ATL::ChTraitsCRT<wchar_t> > > &) *OpenDCL*
public: enum Acad::ErrorStatus __cdecl AcDbDatabase::getSymbolTable(class AcDbDimStyleTable * &,enum AcDb::OpenMode) *OpenDCL*
public: virtual __cdecl CAcUiStringComboBox::~CAcUiStringComboBox(void) *OpenDCL*
protected: virtual int __cdecl CAdUiEdit::OnDrawTipText(class CAdUiDrawTipText &) *OpenDCL*
public: void __cdecl CAcUiLineWeightComboBox::SetUseDefault(int) *OpenDCL*
protected: virtual bool __cdecl CAdUiPaletteSet::CanFrameworkTakeFocus(void) *OpenDCL*
public: __cdecl AcDbHatch::AcDbHatch(void) *OpenDCL*
public: __cdecl AcCmColor::AcCmColor(class AcCmColor const &) *OpenDCL*
public: virtual void __cdecl CAdUiComboBox::DrawItem(struct tagDRAWITEMSTRUCT *) *OpenDCL*
public: virtual __cdecl CAcUiEdit::~CAcUiEdit(void) *OpenDCL*
protected: struct HBRUSH__ * __cdecl CAdUiBaseDialog::OnCtlColor(class CDC *,class CWnd *,unsigned int) *OpenDCL*
protected: virtual void __cdecl CAcUiPlotStyleTablesComboBox::OnAddItems(void) *OpenDCL*
protected: void __cdecl CAdUiDialog::OnShowWindow(int,unsigned int) *OpenDCL*
__declspec(dllimport) public: class AcGePoint3d __cdecl AcGeLineSeg3d::midPoint(void)const  *OpenDCL*
public: enum Acad::ErrorStatus __cdecl AcDbHatch::setPattern(enum AcDbHatch::HatchPatternType,wchar_t const *) *OpenDCL*
protected: virtual void __cdecl CAcUiArrowHeadComboBox::DrawItemImage(class CDC &,class CRect &,__int64) *OpenDCL*
public: enum Acad::ErrorStatus __cdecl AcDbHatch::setPatternAngle(double) *OpenDCL*
public: virtual void __cdecl CAdUiComboBox::GetContentExtent(wchar_t const *,int &,int &) *OpenDCL*
int __cdecl acedCoordFromPixelToWorld(int,class CPoint,double * const) *OpenDCL*
__declspec(dllimport) public: static class AcUniqueString const * const AcGsKernelDescriptor::k3DDrawing *OpenDCL*
public: virtual struct CRuntimeClass * __cdecl CAcUiSymbolComboBox::GetRuntimeClass(void)const  *OpenDCL*
protected: virtual void __cdecl CAcUiLineTypeComboBox::OnAddItems(void) *OpenDCL*
public: void __cdecl CAdUiTabChildDialog::SetDirty(int) *OpenDCL*
public: virtual struct CRuntimeClass * __cdecl CAcUiStringEdit::GetRuntimeClass(void)const  *OpenDCL*
protected: void __cdecl CAdUiPaletteSet::GetAdjustedClientRect(class CRect &) *OpenDCL*
int __cdecl ads_queueexpr(wchar_t const *) *OpenDCL*
public: enum AcDb::MeasurementValue __cdecl AcDbDatabase::measurement(void)const  *OpenDCL*
public: virtual struct CRuntimeClass * __cdecl CAdUiDockControlBar::GetRuntimeClass(void)const  *OpenDCL*
protected: virtual struct AFX_MSGMAP const * __cdecl CAcUiStringComboBox::GetMessageMap(void)const  *OpenDCL*
public: class AcGePoint3d __cdecl AcDbDatabase::extmin(void)const  *OpenDCL*
int __cdecl acedRegisterExtendedTab(wchar_t const *,wchar_t const *) *OpenDCL*
__declspec(dllimport) public: __cdecl AcGePoint2d::AcGePoint2d(void) *OpenDCL*
public: class AcCmColor & __cdecl AcCmColor::operator=(class AcCmColor const &) *OpenDCL*
public: int __cdecl CAcUiLineWeightComboBox::GetCurrentItemLineWeight(void) *OpenDCL*
public: virtual class AcRxClass * __cdecl AcGiDrawable::isA(void)const  *OpenDCL*
public: __cdecl CAdUiDockControlBar::CAdUiDockControlBar(int) *OpenDCL*
public: int __cdecl CAcUiEdit::ConvertData(class ATL::CStringT<wchar_t,class StrTraitMFC_DLL<wchar_t,class ATL::ChTraitsCRT<wchar_t> > > &) *OpenDCL*
protected: virtual enum ADUI_REPLY __cdecl CAdUiComboBox::OnGetTipSupport(class CPoint &) *OpenDCL*
public: virtual void __cdecl CAcUiAngleEdit::SetStyleMask(unsigned long) *OpenDCL*
__declspec(dllimport) public: static class AcGsGraphicsKernel * __cdecl AcGsManager::acquireGraphicsKernel(class AcGsKernelDescriptor const &) *OpenDCL*
public: virtual class CWnd * __cdecl CAcUiTabChildDialog::AppMainWindow(void) *OpenDCL*
public: virtual enum Acad::ErrorStatus __cdecl AcCmColor::setRGB(unsigned char,unsigned char,unsigned char) *OpenDCL*
public: void __cdecl CAdUiPaletteSet::GetFullRect(class CRect &) *OpenDCL*
public: virtual unsigned short __cdecl AcCmColor::colorIndex(void)const  *OpenDCL*
public: void __cdecl CAdUiDockControlBar::EnableDocking(unsigned long) *OpenDCL*
public: virtual void __cdecl AcDbDatabaseReactor::objectModified(class AcDbDatabase const *,class AcDbObject const *) *OpenDCL*
public: enum Acad::ErrorStatus __cdecl AcDbHatch::setNormal(class AcGeVector3d const &) *OpenDCL*
public: int __cdecl CAdUiDockControlBar::IsFloating(void) *OpenDCL*
protected: virtual void __cdecl CAdUiTabChildDialog::OnCancel(void) *OpenDCL*
public: virtual wchar_t const * __cdecl AcCmColor::colorNameForDisplay(void) *OpenDCL*
public: virtual __cdecl CAcUiColorComboBox::~CAcUiColorComboBox(void) *OpenDCL*
public: virtual struct CRuntimeClass * __cdecl CAcUiTabChildDialog::GetRuntimeClass(void)const  *OpenDCL*
public: virtual int __cdecl CAdUiTabChildDialog::PreTranslateMessage(struct tagMSG *) *OpenDCL*
